{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nrequire(\"core-js/modules/es.array.iterator.js\");\nrequire(\"core-js/modules/es.string.iterator.js\");\nrequire(\"core-js/modules/es.weak-map.js\");\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\nrequire(\"core-js/modules/es.symbol.js\");\nrequire(\"core-js/modules/es.symbol.description.js\");\nrequire(\"core-js/modules/es.symbol.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es.object.assign.js\");\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nrequire(\"core-js/modules/es.regexp.to-string.js\");\nrequire(\"core-js/modules/es.array.map.js\");\nrequire(\"core-js/modules/es.regexp.constructor.js\");\nrequire(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.string.replace.js\");\nrequire(\"core-js/modules/es.array.includes.js\");\nrequire(\"core-js/modules/es.string.includes.js\");\nrequire(\"core-js/modules/es.array.slice.js\");\nvar _EventEmitter = _interopRequireDefault(require(\"./EventEmitter\"));\nvar _Formio = require(\"./Formio\");\nvar FormioUtils = _interopRequireWildcard(require(\"./utils/utils\"));\nvar _i18next = _interopRequireDefault(require(\"i18next\"));\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nvar _moment = _interopRequireDefault(require(\"moment\"));\nvar _vanillaTextMask = _interopRequireDefault(require(\"@formio/vanilla-text-mask\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\n/**\n * The root component for all elements within the Form.io renderer.\n */\nvar Element = /*#__PURE__*/function () {\n  function Element(options) {\n    _classCallCheck(this, Element);\n\n    /**\n     * The options for this component.\n     * @type {{}}\n     */\n    this.options = Object.assign({\n      language: 'en',\n      highlightErrors: true,\n      componentErrorClass: 'formio-error-wrapper',\n      componentWarningClass: 'formio-warning-wrapper',\n      row: '',\n      namespace: 'formio'\n    }, options || {});\n    /**\n     * The ID of this component. This value is auto-generated when the component is created, but\n     * can also be provided from the component.id value passed into the constructor.\n     * @type {string}\n     */\n\n    this.id = FormioUtils.getRandomComponentId();\n    /**\n     * An array of event handlers so that the destry command can deregister them.\n     * @type {Array}\n     */\n\n    this.eventHandlers = []; // Use the i18next that is passed in, otherwise use the global version.\n\n    this.i18next = this.options.i18next || _i18next.default;\n    /**\n     * An instance of the EventEmitter class to handle the emitting and registration of events.\n     *\n     * @type {EventEmitter}\n     */\n\n    this.events = options && options.events ? options.events : new _EventEmitter.default();\n    this.defaultMask = null;\n    /**\n     * Conditional to show or hide helplinks in editForm\n     *\n     * @type {*|boolean}\n     */\n\n    this.helplinks = this.options.helplinks === 'false' ? false : this.options.helplinks || 'https://help.form.io';\n  }\n  /**\n   * Register for a new event within this component.\n   *\n   * @example\n   * let component = new BaseComponent({\n   *   type: 'textfield',\n   *   label: 'First Name',\n   *   key: 'firstName'\n   * });\n   * component.on('componentChange', (changed) => {\n   *   console.log('this element is changed.');\n   * });\n   *\n   *\n   * @param {string} event - The event you wish to register the handler for.\n   * @param {function} cb - The callback handler to handle this event.\n   */\n\n  _createClass(Element, [{\n    key: \"on\",\n    value: function on(event, cb, internal) {\n      var once = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (!this.events) {\n        return;\n      }\n      var type = \"\".concat(this.options.namespace, \".\").concat(event); // Store the component id in the handler so that we can determine which events are for this component.\n\n      cb.id = this.id;\n      cb.key = this.key;\n      cb.internal = internal; // Register for this event.\n\n      return this.events[once ? 'once' : 'on'](type, cb);\n    }\n    /**\n     * Register for a new single-fire event within this component.\n     *\n     * @param {string} event - The event you wish to register the handler for.\n     * @param {function} cb - The callback handler to handle this event.\n     */\n  }, {\n    key: \"once\",\n    value: function once(event, cb, internal) {\n      return this.on(event, cb, internal, true);\n    }\n    /**\n     * Allow catching any event.\n     *\n     * @param cb\n     * @returns {this}\n     */\n  }, {\n    key: \"onAny\",\n    value: function onAny(cb) {\n      if (!this.events) {\n        return;\n      }\n      return this.events.onAny(cb);\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param cb\n     * @returns {this}\n     */\n  }, {\n    key: \"offAny\",\n    value: function offAny(cb) {\n      if (!this.events) {\n        return;\n      }\n      return this.events.offAny(cb);\n    }\n    /**\n     * Removes a listener for a certain event. Not passing the 2nd arg will remove all listeners for that event.\n     *\n     * @param {string} event - The event you wish to register the handler for.\n     * @param {function|undefined} cb - The callback handler to handle this event.\n     */\n  }, {\n    key: \"off\",\n    value: function off(event, cb) {\n      var _this = this;\n      if (!this.events) {\n        return;\n      }\n      var type = \"\".concat(this.options.namespace, \".\").concat(event);\n      this.events.listeners(type).forEach(function (listener) {\n        // Ensure the listener is for this element\n        if (!listener || listener.id !== _this.id) {\n          return;\n        } // If there is a given callback, only deal with the match\n\n        if (cb && cb !== listener) {\n          return;\n        }\n        _this.events.off(type, listener);\n      });\n    }\n    /**\n     * Emit a new event.\n     *\n     * @param {string} event - The event to emit.\n     * @param {Object} data - The data to emit with the handler.\n     */\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      if (this.events) {\n        var _this$events;\n        for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          data[_key - 1] = arguments[_key];\n        }\n        (_this$events = this.events).emit.apply(_this$events, [\"\".concat(this.options.namespace, \".\").concat(event)].concat(data));\n      }\n    }\n    /**\n     * Check if the component has an event handler set up for the event.\n     *\n     * @param {string} event - The event name.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"hasEventHandler\",\n    value: function hasEventHandler(event) {\n      var _this2 = this;\n      if (!this.events) {\n        return false;\n      }\n      var type = \"\".concat(this.options.namespace, \".\").concat(event);\n      return this.events.listeners(type).some(function (listener) {\n        if (!listener) {\n          return false;\n        }\n        return listener.id === _this2.id || listener.key === _this2.key;\n      });\n    }\n    /**\n     * Wrapper method to add an event listener to an HTML element.\n     *\n     * @param obj\n     *   The DOM element to add the event to.\n     * @param type\n     *   The event name to add.\n     * @param func\n     *   The callback function to be executed when the listener is triggered.\n     * @param persistent\n     *   If this listener should persist beyond \"destroy\" commands.\n     */\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(obj, type, func, persistent) {\n      if (!obj) {\n        return;\n      }\n      if (!persistent) {\n        this.eventHandlers.push({\n          id: this.id,\n          obj: obj,\n          type: type,\n          func: func\n        });\n      }\n      if ('addEventListener' in obj) {\n        obj.addEventListener(type, func, false);\n      } else if ('attachEvent' in obj) {\n        obj.attachEvent(\"on\".concat(type), func);\n      }\n      return this;\n    }\n    /**\n     * Remove an event listener from the object.\n     *\n     * @param obj\n     * @param type\n     */\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(obj, type) {\n      var _this3 = this;\n      var func = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var indexes = [];\n      if (!obj) {\n        return;\n      }\n      this.eventHandlers.forEach(function (handler, index) {\n        if (handler.id === _this3.id && obj.removeEventListener && handler.type === type && (!func || handler.func === func)) {\n          obj.removeEventListener(type, handler.func);\n          indexes.push(index);\n        }\n      });\n      if (indexes.length) {\n        _lodash.default.pullAt(this.eventHandlers, indexes);\n      }\n      return this;\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners() {\n      var _this4 = this;\n      this.eventHandlers.forEach(function (handler) {\n        if (_this4.id === handler.id && handler.type && handler.obj && handler.obj.removeEventListener) {\n          handler.obj.removeEventListener(handler.type, handler.func);\n        }\n      });\n      this.eventHandlers = [];\n    }\n  }, {\n    key: \"removeAllEvents\",\n    value: function removeAllEvents(includeExternal) {\n      var _this5 = this;\n      _lodash.default.each(this.events._events, function (events, type) {\n        _lodash.default.each(events, function (listener) {\n          if (listener && _this5.id === listener.id && (includeExternal || listener.internal)) {\n            _this5.events.off(type, listener);\n          }\n        });\n      });\n    }\n    /**\n     * Removes all event listeners attached to this component.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.removeEventListeners();\n      this.removeAllEvents();\n    }\n    /**\n     * Append an HTML DOM element to a container.\n     *\n     * @param element\n     * @param container\n     */\n  }, {\n    key: \"appendTo\",\n    value: function appendTo(element, container) {\n      container === null || container === void 0 ? void 0 : container.appendChild(element);\n      return this;\n    }\n    /**\n     * Prepend an HTML DOM element to a container.\n     *\n     * @param {HTMLElement} element - The DOM element to prepend.\n     * @param {HTMLElement} container - The DOM element that is the container of the element getting prepended.\n     */\n  }, {\n    key: \"prependTo\",\n    value: function prependTo(element, container) {\n      if (container) {\n        if (container.firstChild) {\n          try {\n            container.insertBefore(element, container.firstChild);\n          } catch (err) {\n            console.warn(err);\n            container.appendChild(element);\n          }\n        } else {\n          container.appendChild(element);\n        }\n      }\n      return this;\n    }\n    /**\n     * Removes an HTML DOM element from its bounding container.\n     *\n     * @param {HTMLElement} element - The element to remove.\n     * @param {HTMLElement} container - The DOM element that is the container of the element to remove.\n     */\n  }, {\n    key: \"removeChildFrom\",\n    value: function removeChildFrom(element, container) {\n      if (container && container.contains(element)) {\n        try {\n          container.removeChild(element);\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n      return this;\n    }\n    /**\n     * Alias for document.createElement.\n     *\n     * @param {string} type - The type of element to create\n     * @param {Object} attr - The element attributes to add to the created element.\n     * @param {Various} children - Child elements. Can be a DOM Element, string or array of both.\n     *\n     * @return {HTMLElement} - The created element.\n     */\n  }, {\n    key: \"ce\",\n    value: function ce(type, attr) {\n      var children = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      // console.warn('Call to deprecated this.ce(). Dom elements should be created with templates, not manually with ce.');\n      // Create the element.\n      var element = document.createElement(type); // Add attributes.\n\n      if (attr) {\n        this.attr(element, attr);\n      } // Append the children.\n\n      this.appendChild(element, children);\n      return element;\n    }\n    /**\n     * Append different types of children.\n     *\n     * @param child\n     */\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(element, child) {\n      var _this6 = this;\n      if (Array.isArray(child)) {\n        child.forEach(function (oneChild) {\n          return _this6.appendChild(element, oneChild);\n        });\n      } else if (child instanceof HTMLElement || child instanceof Text) {\n        element.appendChild(child);\n      } else if (child) {\n        element.appendChild(this.text(child.toString()));\n      }\n      return this;\n    }\n    /**\n     * Creates a new input mask placeholder.\n     * @param {HTMLElement} mask - The input mask.\n     * @returns {string} - The placeholder that will exist within the input as they type.\n     */\n  }, {\n    key: \"maskPlaceholder\",\n    value: function maskPlaceholder(mask) {\n      var _this7 = this;\n      return mask.map(function (char) {\n        return char instanceof RegExp ? _this7.placeholderChar : char;\n      }).join('');\n    }\n  }, {\n    key: \"placeholderChar\",\n    get: function get() {\n      var _this$component;\n      return ((_this$component = this.component) === null || _this$component === void 0 ? void 0 : _this$component.inputMaskPlaceholderChar) || '_';\n    }\n    /**\n     * Sets the input mask for an input.\n     *\n     * @param {HTMLElement} input - The html input to apply the mask to.\n     * @param {String} inputMask - The input mask to add to this input.\n     * @param {Boolean} usePlaceholder - Set the mask placeholder on the input.\n     */\n  }, {\n    key: \"setInputMask\",\n    value: function setInputMask(input, inputMask, usePlaceholder) {\n      if (input && inputMask) {\n        var mask = FormioUtils.getInputMask(inputMask, this.placeholderChar);\n        this.defaultMask = mask;\n        try {\n          //destroy previous mask\n          if (input.mask) {\n            input.mask.destroy();\n          }\n          input.mask = (0, _vanillaTextMask.default)({\n            inputElement: input,\n            mask: mask,\n            placeholderChar: this.placeholderChar,\n            shadowRoot: this.root ? this.root.shadowRoot : null\n          });\n        } catch (e) {\n          // Don't pass error up, to prevent form rejection.\n          // Internal bug of vanilla-text-mask on iOS (`selectionEnd`);\n          console.warn(e);\n        }\n        if (mask.numeric) {\n          input.setAttribute('pattern', '\\\\d*');\n        }\n        if (usePlaceholder) {\n          input.setAttribute('placeholder', this.maskPlaceholder(mask));\n        }\n      }\n    }\n    /**\n     * Translate a text using the i18n system.\n     *\n     * @param {string|Array<string>} text - The i18n identifier.\n     * @param {Object} params - The i18n parameters to use for translation.\n     */\n  }, {\n    key: \"t\",\n    value: function t(text) {\n      var _this$i18next;\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      return (_this$i18next = this.i18next).t.apply(_this$i18next, [text].concat(args));\n    }\n    /**\n     * Alias to create a text node.\n     * @param text\n     * @returns {Text}\n     */\n  }, {\n    key: \"text\",\n    value: function text(_text) {\n      return document.createTextNode(this.t(_text));\n    }\n    /**\n     * Adds an object of attributes onto an element.\n     * @param {HtmlElement} element - The element to add the attributes to.\n     * @param {Object} attr - The attributes to add to the input element.\n     */\n  }, {\n    key: \"attr\",\n    value: function attr(element, _attr) {\n      var _this8 = this;\n      if (!element) {\n        return;\n      }\n      _lodash.default.each(_attr, function (value, key) {\n        if (typeof value !== 'undefined') {\n          if (key.indexOf('on') === 0) {\n            // If this is an event, add a listener.\n            _this8.addEventListener(element, key.substr(2).toLowerCase(), value);\n          } else {\n            // Otherwise it is just an attribute.\n            element.setAttribute(key, value);\n          }\n        }\n      });\n    }\n    /**\n     * Determines if an element has a class.\n     *\n     * Taken from jQuery https://j11y.io/jquery/#v=1.5.0&fn=jQuery.fn.hasClass\n     */\n  }, {\n    key: \"hasClass\",\n    value: function hasClass(element, className) {\n      if (!element) {\n        return false;\n      } // Allow templates to intercept.\n\n      className = \" \".concat(className, \" \");\n      return \" \".concat(element.className, \" \").replace(/[\\n\\t\\r]/g, ' ').indexOf(className) > -1;\n    }\n    /**\n     * Adds a class to a DOM element.\n     *\n     * @param element\n     *   The element to add a class to.\n     * @param className\n     *   The name of the class to add.\n     */\n  }, {\n    key: \"addClass\",\n    value: function addClass(element, className) {\n      if (!element || !(element instanceof HTMLElement)) {\n        return this;\n      } // Allow templates to intercept.\n\n      var classes = element.getAttribute('class');\n      if (!(classes !== null && classes !== void 0 && classes.includes(className))) {\n        element.setAttribute('class', \"\".concat(classes, \" \").concat(className));\n      }\n      return this;\n    }\n    /**\n     * Remove a class from a DOM element.\n     *\n     * @param element\n     *   The DOM element to remove the class from.\n     * @param className\n     *   The name of the class that is to be removed.\n     */\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(element, className) {\n      if (!element || !className || !(element instanceof HTMLElement)) {\n        return this;\n      } // Allow templates to intercept.\n\n      var cls = element.getAttribute('class');\n      if (cls) {\n        cls = cls.replace(new RegExp(\" \".concat(className), 'g'), '');\n        element.setAttribute('class', cls);\n      }\n      return this;\n    }\n    /**\n     * Empty's an HTML DOM element.\n     *\n     * @param {HTMLElement} element - The element you wish to empty.\n     */\n  }, {\n    key: \"empty\",\n    value: function empty(element) {\n      if (element) {\n        while (element.firstChild) {\n          element.removeChild(element.firstChild);\n        }\n      }\n    }\n    /**\n     * Create an evaluation context for all script executions and interpolations.\n     *\n     * @param additional\n     * @return {*}\n     */\n  }, {\n    key: \"evalContext\",\n    value: function evalContext(additional) {\n      var _this$options;\n      return Object.assign({\n        _: _lodash.default,\n        utils: FormioUtils,\n        util: FormioUtils,\n        user: _Formio.GlobalFormio.getUser(),\n        moment: _moment.default,\n        instance: this,\n        self: this,\n        token: _Formio.GlobalFormio.getToken({\n          decode: true\n        }),\n        config: this.root && this.root.form && this.root.form.config ? this.root.form.config : (_this$options = this.options) !== null && _this$options !== void 0 && _this$options.formConfig ? this.options.formConfig : {}\n      }, additional, _lodash.default.get(this.root, 'options.evalContext', {}));\n    }\n    /**\n     * Performs an interpolation using the evaluation context of this component.\n     *\n     * @param string\n     * @param data\n     * @return {XML|string|*|void}\n     */\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(string, data) {\n      var _this9 = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (typeof string !== 'function' && (this.component.content || this.component.html) && !FormioUtils.Evaluator.templateSettings.interpolate.test(string)) {\n        string = FormioUtils.translateHTMLTemplate(String(string), function (value) {\n          return _this9.t(value);\n        });\n      }\n      return FormioUtils.interpolate(string, this.evalContext(data), options);\n    }\n    /**\n     * Performs an evaluation using the evaluation context of this component.\n     *\n     * @param func\n     * @param args\n     * @param ret\n     * @param tokenize\n     * @return {*}\n     */\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(func, args, ret, tokenize) {\n      return FormioUtils.evaluate(func, this.evalContext(args), ret, tokenize);\n    }\n    /**\n     * Allow for options to hook into the functionality of this renderer.\n     * @return {*}\n     */\n  }, {\n    key: \"hook\",\n    value: function hook() {\n      var name = arguments[0];\n      if (this.options && this.options.hooks && this.options.hooks[name]) {\n        return this.options.hooks[name].apply(this, Array.prototype.slice.call(arguments, 1));\n      } else {\n        // If this is an async hook instead of a sync.\n        var fn = typeof arguments[arguments.length - 1] === 'function' ? arguments[arguments.length - 1] : null;\n        if (fn) {\n          return fn(null, arguments[1]);\n        } else {\n          return arguments[1];\n        }\n      }\n    }\n  }]);\n  return Element;\n}();\nexports.default = Element;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","require","Object","defineProperty","exports","value","default","_EventEmitter","_interopRequireDefault","_Formio","FormioUtils","_interopRequireWildcard","_i18next","_lodash","_moment","_vanillaTextMask","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","Element","options","assign","language","highlightErrors","componentErrorClass","componentWarningClass","row","namespace","id","getRandomComponentId","eventHandlers","i18next","events","defaultMask","helplinks","on","event","cb","internal","once","arguments","undefined","type","concat","onAny","offAny","off","_this","listeners","forEach","listener","emit","_this$events","_len","data","Array","_key","apply","hasEventHandler","_this2","some","addEventListener","func","persistent","push","attachEvent","removeEventListener","_this3","indexes","handler","index","pullAt","removeEventListeners","_this4","removeAllEvents","includeExternal","_this5","each","_events","destroy","appendTo","element","container","appendChild","prependTo","firstChild","insertBefore","err","console","warn","removeChildFrom","contains","removeChild","ce","attr","children","document","createElement","child","_this6","isArray","oneChild","HTMLElement","Text","text","toString","maskPlaceholder","mask","_this7","map","char","RegExp","placeholderChar","join","_this$component","component","inputMaskPlaceholderChar","setInputMask","input","inputMask","usePlaceholder","getInputMask","inputElement","shadowRoot","root","e","numeric","setAttribute","t","_this$i18next","_len2","args","_key2","_text","createTextNode","_attr","_this8","indexOf","substr","toLowerCase","hasClass","className","replace","addClass","classes","getAttribute","includes","removeClass","cls","empty","evalContext","additional","_this$options","_","utils","util","user","GlobalFormio","getUser","moment","self","token","getToken","decode","config","form","formConfig","interpolate","string","_this9","content","html","Evaluator","templateSettings","test","translateHTMLTemplate","String","evaluate","ret","tokenize","hook","name","hooks","slice","fn"],"sources":["D:/task/node_modules/formiojs/Element.js"],"sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nrequire(\"core-js/modules/es.array.iterator.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/es.weak-map.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.object.assign.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.regexp.constructor.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.replace.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.string.includes.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nvar _EventEmitter = _interopRequireDefault(require(\"./EventEmitter\"));\n\nvar _Formio = require(\"./Formio\");\n\nvar FormioUtils = _interopRequireWildcard(require(\"./utils/utils\"));\n\nvar _i18next = _interopRequireDefault(require(\"i18next\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _vanillaTextMask = _interopRequireDefault(require(\"@formio/vanilla-text-mask\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/**\n * The root component for all elements within the Form.io renderer.\n */\nvar Element = /*#__PURE__*/function () {\n  function Element(options) {\n    _classCallCheck(this, Element);\n\n    /**\n     * The options for this component.\n     * @type {{}}\n     */\n    this.options = Object.assign({\n      language: 'en',\n      highlightErrors: true,\n      componentErrorClass: 'formio-error-wrapper',\n      componentWarningClass: 'formio-warning-wrapper',\n      row: '',\n      namespace: 'formio'\n    }, options || {});\n    /**\n     * The ID of this component. This value is auto-generated when the component is created, but\n     * can also be provided from the component.id value passed into the constructor.\n     * @type {string}\n     */\n\n    this.id = FormioUtils.getRandomComponentId();\n    /**\n     * An array of event handlers so that the destry command can deregister them.\n     * @type {Array}\n     */\n\n    this.eventHandlers = []; // Use the i18next that is passed in, otherwise use the global version.\n\n    this.i18next = this.options.i18next || _i18next.default;\n    /**\n     * An instance of the EventEmitter class to handle the emitting and registration of events.\n     *\n     * @type {EventEmitter}\n     */\n\n    this.events = options && options.events ? options.events : new _EventEmitter.default();\n    this.defaultMask = null;\n    /**\n     * Conditional to show or hide helplinks in editForm\n     *\n     * @type {*|boolean}\n     */\n\n    this.helplinks = this.options.helplinks === 'false' ? false : this.options.helplinks || 'https://help.form.io';\n  }\n  /**\n   * Register for a new event within this component.\n   *\n   * @example\n   * let component = new BaseComponent({\n   *   type: 'textfield',\n   *   label: 'First Name',\n   *   key: 'firstName'\n   * });\n   * component.on('componentChange', (changed) => {\n   *   console.log('this element is changed.');\n   * });\n   *\n   *\n   * @param {string} event - The event you wish to register the handler for.\n   * @param {function} cb - The callback handler to handle this event.\n   */\n\n\n  _createClass(Element, [{\n    key: \"on\",\n    value: function on(event, cb, internal) {\n      var once = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!this.events) {\n        return;\n      }\n\n      var type = \"\".concat(this.options.namespace, \".\").concat(event); // Store the component id in the handler so that we can determine which events are for this component.\n\n      cb.id = this.id;\n      cb.key = this.key;\n      cb.internal = internal; // Register for this event.\n\n      return this.events[once ? 'once' : 'on'](type, cb);\n    }\n    /**\n     * Register for a new single-fire event within this component.\n     *\n     * @param {string} event - The event you wish to register the handler for.\n     * @param {function} cb - The callback handler to handle this event.\n     */\n\n  }, {\n    key: \"once\",\n    value: function once(event, cb, internal) {\n      return this.on(event, cb, internal, true);\n    }\n    /**\n     * Allow catching any event.\n     *\n     * @param cb\n     * @returns {this}\n     */\n\n  }, {\n    key: \"onAny\",\n    value: function onAny(cb) {\n      if (!this.events) {\n        return;\n      }\n\n      return this.events.onAny(cb);\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param cb\n     * @returns {this}\n     */\n\n  }, {\n    key: \"offAny\",\n    value: function offAny(cb) {\n      if (!this.events) {\n        return;\n      }\n\n      return this.events.offAny(cb);\n    }\n    /**\n     * Removes a listener for a certain event. Not passing the 2nd arg will remove all listeners for that event.\n     *\n     * @param {string} event - The event you wish to register the handler for.\n     * @param {function|undefined} cb - The callback handler to handle this event.\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(event, cb) {\n      var _this = this;\n\n      if (!this.events) {\n        return;\n      }\n\n      var type = \"\".concat(this.options.namespace, \".\").concat(event);\n      this.events.listeners(type).forEach(function (listener) {\n        // Ensure the listener is for this element\n        if (!listener || listener.id !== _this.id) {\n          return;\n        } // If there is a given callback, only deal with the match\n\n\n        if (cb && cb !== listener) {\n          return;\n        }\n\n        _this.events.off(type, listener);\n      });\n    }\n    /**\n     * Emit a new event.\n     *\n     * @param {string} event - The event to emit.\n     * @param {Object} data - The data to emit with the handler.\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      if (this.events) {\n        var _this$events;\n\n        for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          data[_key - 1] = arguments[_key];\n        }\n\n        (_this$events = this.events).emit.apply(_this$events, [\"\".concat(this.options.namespace, \".\").concat(event)].concat(data));\n      }\n    }\n    /**\n     * Check if the component has an event handler set up for the event.\n     *\n     * @param {string} event - The event name.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"hasEventHandler\",\n    value: function hasEventHandler(event) {\n      var _this2 = this;\n\n      if (!this.events) {\n        return false;\n      }\n\n      var type = \"\".concat(this.options.namespace, \".\").concat(event);\n      return this.events.listeners(type).some(function (listener) {\n        if (!listener) {\n          return false;\n        }\n\n        return listener.id === _this2.id || listener.key === _this2.key;\n      });\n    }\n    /**\n     * Wrapper method to add an event listener to an HTML element.\n     *\n     * @param obj\n     *   The DOM element to add the event to.\n     * @param type\n     *   The event name to add.\n     * @param func\n     *   The callback function to be executed when the listener is triggered.\n     * @param persistent\n     *   If this listener should persist beyond \"destroy\" commands.\n     */\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(obj, type, func, persistent) {\n      if (!obj) {\n        return;\n      }\n\n      if (!persistent) {\n        this.eventHandlers.push({\n          id: this.id,\n          obj: obj,\n          type: type,\n          func: func\n        });\n      }\n\n      if ('addEventListener' in obj) {\n        obj.addEventListener(type, func, false);\n      } else if ('attachEvent' in obj) {\n        obj.attachEvent(\"on\".concat(type), func);\n      }\n\n      return this;\n    }\n    /**\n     * Remove an event listener from the object.\n     *\n     * @param obj\n     * @param type\n     */\n\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(obj, type) {\n      var _this3 = this;\n\n      var func = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var indexes = [];\n\n      if (!obj) {\n        return;\n      }\n\n      this.eventHandlers.forEach(function (handler, index) {\n        if (handler.id === _this3.id && obj.removeEventListener && handler.type === type && (!func || handler.func === func)) {\n          obj.removeEventListener(type, handler.func);\n          indexes.push(index);\n        }\n      });\n\n      if (indexes.length) {\n        _lodash.default.pullAt(this.eventHandlers, indexes);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners() {\n      var _this4 = this;\n\n      this.eventHandlers.forEach(function (handler) {\n        if (_this4.id === handler.id && handler.type && handler.obj && handler.obj.removeEventListener) {\n          handler.obj.removeEventListener(handler.type, handler.func);\n        }\n      });\n      this.eventHandlers = [];\n    }\n  }, {\n    key: \"removeAllEvents\",\n    value: function removeAllEvents(includeExternal) {\n      var _this5 = this;\n\n      _lodash.default.each(this.events._events, function (events, type) {\n        _lodash.default.each(events, function (listener) {\n          if (listener && _this5.id === listener.id && (includeExternal || listener.internal)) {\n            _this5.events.off(type, listener);\n          }\n        });\n      });\n    }\n    /**\n     * Removes all event listeners attached to this component.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.removeEventListeners();\n      this.removeAllEvents();\n    }\n    /**\n     * Append an HTML DOM element to a container.\n     *\n     * @param element\n     * @param container\n     */\n\n  }, {\n    key: \"appendTo\",\n    value: function appendTo(element, container) {\n      container === null || container === void 0 ? void 0 : container.appendChild(element);\n      return this;\n    }\n    /**\n     * Prepend an HTML DOM element to a container.\n     *\n     * @param {HTMLElement} element - The DOM element to prepend.\n     * @param {HTMLElement} container - The DOM element that is the container of the element getting prepended.\n     */\n\n  }, {\n    key: \"prependTo\",\n    value: function prependTo(element, container) {\n      if (container) {\n        if (container.firstChild) {\n          try {\n            container.insertBefore(element, container.firstChild);\n          } catch (err) {\n            console.warn(err);\n            container.appendChild(element);\n          }\n        } else {\n          container.appendChild(element);\n        }\n      }\n\n      return this;\n    }\n    /**\n     * Removes an HTML DOM element from its bounding container.\n     *\n     * @param {HTMLElement} element - The element to remove.\n     * @param {HTMLElement} container - The DOM element that is the container of the element to remove.\n     */\n\n  }, {\n    key: \"removeChildFrom\",\n    value: function removeChildFrom(element, container) {\n      if (container && container.contains(element)) {\n        try {\n          container.removeChild(element);\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n\n      return this;\n    }\n    /**\n     * Alias for document.createElement.\n     *\n     * @param {string} type - The type of element to create\n     * @param {Object} attr - The element attributes to add to the created element.\n     * @param {Various} children - Child elements. Can be a DOM Element, string or array of both.\n     *\n     * @return {HTMLElement} - The created element.\n     */\n\n  }, {\n    key: \"ce\",\n    value: function ce(type, attr) {\n      var children = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      // console.warn('Call to deprecated this.ce(). Dom elements should be created with templates, not manually with ce.');\n      // Create the element.\n      var element = document.createElement(type); // Add attributes.\n\n      if (attr) {\n        this.attr(element, attr);\n      } // Append the children.\n\n\n      this.appendChild(element, children);\n      return element;\n    }\n    /**\n     * Append different types of children.\n     *\n     * @param child\n     */\n\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(element, child) {\n      var _this6 = this;\n\n      if (Array.isArray(child)) {\n        child.forEach(function (oneChild) {\n          return _this6.appendChild(element, oneChild);\n        });\n      } else if (child instanceof HTMLElement || child instanceof Text) {\n        element.appendChild(child);\n      } else if (child) {\n        element.appendChild(this.text(child.toString()));\n      }\n\n      return this;\n    }\n    /**\n     * Creates a new input mask placeholder.\n     * @param {HTMLElement} mask - The input mask.\n     * @returns {string} - The placeholder that will exist within the input as they type.\n     */\n\n  }, {\n    key: \"maskPlaceholder\",\n    value: function maskPlaceholder(mask) {\n      var _this7 = this;\n\n      return mask.map(function (char) {\n        return char instanceof RegExp ? _this7.placeholderChar : char;\n      }).join('');\n    }\n  }, {\n    key: \"placeholderChar\",\n    get: function get() {\n      var _this$component;\n\n      return ((_this$component = this.component) === null || _this$component === void 0 ? void 0 : _this$component.inputMaskPlaceholderChar) || '_';\n    }\n    /**\n     * Sets the input mask for an input.\n     *\n     * @param {HTMLElement} input - The html input to apply the mask to.\n     * @param {String} inputMask - The input mask to add to this input.\n     * @param {Boolean} usePlaceholder - Set the mask placeholder on the input.\n     */\n\n  }, {\n    key: \"setInputMask\",\n    value: function setInputMask(input, inputMask, usePlaceholder) {\n      if (input && inputMask) {\n        var mask = FormioUtils.getInputMask(inputMask, this.placeholderChar);\n        this.defaultMask = mask;\n\n        try {\n          //destroy previous mask\n          if (input.mask) {\n            input.mask.destroy();\n          }\n\n          input.mask = (0, _vanillaTextMask.default)({\n            inputElement: input,\n            mask: mask,\n            placeholderChar: this.placeholderChar,\n            shadowRoot: this.root ? this.root.shadowRoot : null\n          });\n        } catch (e) {\n          // Don't pass error up, to prevent form rejection.\n          // Internal bug of vanilla-text-mask on iOS (`selectionEnd`);\n          console.warn(e);\n        }\n\n        if (mask.numeric) {\n          input.setAttribute('pattern', '\\\\d*');\n        }\n\n        if (usePlaceholder) {\n          input.setAttribute('placeholder', this.maskPlaceholder(mask));\n        }\n      }\n    }\n    /**\n     * Translate a text using the i18n system.\n     *\n     * @param {string|Array<string>} text - The i18n identifier.\n     * @param {Object} params - The i18n parameters to use for translation.\n     */\n\n  }, {\n    key: \"t\",\n    value: function t(text) {\n      var _this$i18next;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      return (_this$i18next = this.i18next).t.apply(_this$i18next, [text].concat(args));\n    }\n    /**\n     * Alias to create a text node.\n     * @param text\n     * @returns {Text}\n     */\n\n  }, {\n    key: \"text\",\n    value: function text(_text) {\n      return document.createTextNode(this.t(_text));\n    }\n    /**\n     * Adds an object of attributes onto an element.\n     * @param {HtmlElement} element - The element to add the attributes to.\n     * @param {Object} attr - The attributes to add to the input element.\n     */\n\n  }, {\n    key: \"attr\",\n    value: function attr(element, _attr) {\n      var _this8 = this;\n\n      if (!element) {\n        return;\n      }\n\n      _lodash.default.each(_attr, function (value, key) {\n        if (typeof value !== 'undefined') {\n          if (key.indexOf('on') === 0) {\n            // If this is an event, add a listener.\n            _this8.addEventListener(element, key.substr(2).toLowerCase(), value);\n          } else {\n            // Otherwise it is just an attribute.\n            element.setAttribute(key, value);\n          }\n        }\n      });\n    }\n    /**\n     * Determines if an element has a class.\n     *\n     * Taken from jQuery https://j11y.io/jquery/#v=1.5.0&fn=jQuery.fn.hasClass\n     */\n\n  }, {\n    key: \"hasClass\",\n    value: function hasClass(element, className) {\n      if (!element) {\n        return false;\n      } // Allow templates to intercept.\n\n\n      className = \" \".concat(className, \" \");\n      return \" \".concat(element.className, \" \").replace(/[\\n\\t\\r]/g, ' ').indexOf(className) > -1;\n    }\n    /**\n     * Adds a class to a DOM element.\n     *\n     * @param element\n     *   The element to add a class to.\n     * @param className\n     *   The name of the class to add.\n     */\n\n  }, {\n    key: \"addClass\",\n    value: function addClass(element, className) {\n      if (!element || !(element instanceof HTMLElement)) {\n        return this;\n      } // Allow templates to intercept.\n\n\n      var classes = element.getAttribute('class');\n\n      if (!(classes !== null && classes !== void 0 && classes.includes(className))) {\n        element.setAttribute('class', \"\".concat(classes, \" \").concat(className));\n      }\n\n      return this;\n    }\n    /**\n     * Remove a class from a DOM element.\n     *\n     * @param element\n     *   The DOM element to remove the class from.\n     * @param className\n     *   The name of the class that is to be removed.\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(element, className) {\n      if (!element || !className || !(element instanceof HTMLElement)) {\n        return this;\n      } // Allow templates to intercept.\n\n\n      var cls = element.getAttribute('class');\n\n      if (cls) {\n        cls = cls.replace(new RegExp(\" \".concat(className), 'g'), '');\n        element.setAttribute('class', cls);\n      }\n\n      return this;\n    }\n    /**\n     * Empty's an HTML DOM element.\n     *\n     * @param {HTMLElement} element - The element you wish to empty.\n     */\n\n  }, {\n    key: \"empty\",\n    value: function empty(element) {\n      if (element) {\n        while (element.firstChild) {\n          element.removeChild(element.firstChild);\n        }\n      }\n    }\n    /**\n     * Create an evaluation context for all script executions and interpolations.\n     *\n     * @param additional\n     * @return {*}\n     */\n\n  }, {\n    key: \"evalContext\",\n    value: function evalContext(additional) {\n      var _this$options;\n\n      return Object.assign({\n        _: _lodash.default,\n        utils: FormioUtils,\n        util: FormioUtils,\n        user: _Formio.GlobalFormio.getUser(),\n        moment: _moment.default,\n        instance: this,\n        self: this,\n        token: _Formio.GlobalFormio.getToken({\n          decode: true\n        }),\n        config: this.root && this.root.form && this.root.form.config ? this.root.form.config : (_this$options = this.options) !== null && _this$options !== void 0 && _this$options.formConfig ? this.options.formConfig : {}\n      }, additional, _lodash.default.get(this.root, 'options.evalContext', {}));\n    }\n    /**\n     * Performs an interpolation using the evaluation context of this component.\n     *\n     * @param string\n     * @param data\n     * @return {XML|string|*|void}\n     */\n\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(string, data) {\n      var _this9 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (typeof string !== 'function' && (this.component.content || this.component.html) && !FormioUtils.Evaluator.templateSettings.interpolate.test(string)) {\n        string = FormioUtils.translateHTMLTemplate(String(string), function (value) {\n          return _this9.t(value);\n        });\n      }\n\n      return FormioUtils.interpolate(string, this.evalContext(data), options);\n    }\n    /**\n     * Performs an evaluation using the evaluation context of this component.\n     *\n     * @param func\n     * @param args\n     * @param ret\n     * @param tokenize\n     * @return {*}\n     */\n\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(func, args, ret, tokenize) {\n      return FormioUtils.evaluate(func, this.evalContext(args), ret, tokenize);\n    }\n    /**\n     * Allow for options to hook into the functionality of this renderer.\n     * @return {*}\n     */\n\n  }, {\n    key: \"hook\",\n    value: function hook() {\n      var name = arguments[0];\n\n      if (this.options && this.options.hooks && this.options.hooks[name]) {\n        return this.options.hooks[name].apply(this, Array.prototype.slice.call(arguments, 1));\n      } else {\n        // If this is an async hook instead of a sync.\n        var fn = typeof arguments[arguments.length - 1] === 'function' ? arguments[arguments.length - 1] : null;\n\n        if (fn) {\n          return fn(null, arguments[1]);\n        } else {\n          return arguments[1];\n        }\n      }\n    }\n  }]);\n\n  return Element;\n}();\n\nexports.default = Element;"],"mappings":"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"},"metadata":{},"sourceType":"script"}