{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = [{\n  type: 'select',\n  input: true,\n  key: 'displayInTimezone',\n  label: 'Display in Timezone',\n  tooltip: 'This will display the captured date time in the select timezone.',\n  weight: 30,\n  defaultValue: 'viewer',\n  dataSrc: 'values',\n  data: {\n    values: [{\n      label: 'of Viewer',\n      value: 'viewer'\n    }, {\n      label: 'of Submission',\n      value: 'submission'\n    }, {\n      label: 'of Location',\n      value: 'location'\n    }, {\n      label: 'UTC',\n      value: 'utc'\n    }]\n  }\n}, {\n  type: 'select',\n  input: true,\n  key: 'timezone',\n  label: 'Select Timezone',\n  tooltip: 'Select the timezone you wish to display this Date',\n  weight: 31,\n  lazyLoad: true,\n  defaultValue: '',\n  valueProperty: 'name',\n  dataSrc: 'url',\n  data: {\n    url: '{{options.cdnUrl}}/timezones.json'\n  },\n  template: '<span>{{ item.label }}</span>',\n  conditional: {\n    json: {\n      '===': [{\n        var: 'data.displayInTimezone'\n      }, 'location']\n    }\n  }\n}, {\n  type: 'checkbox',\n  input: true,\n  key: 'useLocaleSettings',\n  label: 'Use Locale Settings',\n  tooltip: 'Use locale settings to display date and time.',\n  weight: 51\n}, {\n  type: 'checkbox',\n  input: true,\n  key: 'allowInput',\n  label: 'Allow Manual Input',\n  tooltip: 'Check this if you would like to allow the user to manually enter in the date.',\n  weight: 51\n}, {\n  type: 'textfield',\n  input: true,\n  key: 'format',\n  label: 'Format',\n  placeholder: 'Format',\n  description: 'Use formats provided by <a href=\"https://github.com/angular-ui/bootstrap/tree/master/src/dateparser/docs#uibdateparsers-format-codes\" target=\"_blank\">DateParser Codes</a>',\n  tooltip: 'The date format for displaying the datetime value.',\n  weight: 52\n}, {\n  type: 'editgrid',\n  input: true,\n  key: 'shortcutButtons',\n  label: 'Shortcut Buttons',\n  description: 'You can specify few buttons which will be shown above the calendar. Use Label to specify the name of the button and onClick to specify which date/time will be set when user clicks the button. E.g, date = new Date()',\n  templates: {\n    header: '<div class=\"row\">\\n  <div class=\"col-sm-3\">Label</div>\\n  <div class=\"col-sm-6\">onClick</div>\\n</div>',\n    row: '<div class=\"row\">\\n      <div class=\"col-sm-3\">\\n        {{ flattenedComponents.label.getView(row.label) }}\\n      </div>\\n      <div class=\"col-sm-6\">\\n        {{ flattenedComponents.onClick.getView(row.onClick) }}\\n      </div>\\n      {% if (!instance.disabled) { %}\\n        <div class=\"col-sm-3\">\\n          <div class=\"btn-group pull-right\">\\n            <button class=\"btn btn-default btn-light btn-sm editRow\"><i class=\"{{ iconClass(\"edit\") }}\"></i></button>\\n            {% if (!instance.hasRemoveButtons || instance.hasRemoveButtons()) { %}\\n              <button class=\"btn btn-danger btn-sm removeRow\"><i class=\"{{ iconClass(\"trash\") }}\"></i></button>\\n            {% } %}\\n          </div>\\n        </div>\\n      {% } %}\\n    </div>'\n  },\n  components: [{\n    label: 'Label',\n    key: 'label',\n    type: 'textfield',\n    input: true,\n    validate: {\n      required: true\n    }\n  }, {\n    label: 'onClick',\n    key: 'onClick',\n    type: 'textarea',\n    editor: 'ace',\n    input: true,\n    validate: {\n      required: true\n    }\n  }],\n  defaultValue: []\n}];\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_default","type","input","key","label","tooltip","weight","defaultValue","dataSrc","data","values","lazyLoad","valueProperty","url","template","conditional","json","var","placeholder","description","templates","header","row","components","validate","required","editor"],"sources":["D:/task/node_modules/formiojs/components/datetime/editForm/DateTime.edit.display.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = [{\n  type: 'select',\n  input: true,\n  key: 'displayInTimezone',\n  label: 'Display in Timezone',\n  tooltip: 'This will display the captured date time in the select timezone.',\n  weight: 30,\n  defaultValue: 'viewer',\n  dataSrc: 'values',\n  data: {\n    values: [{\n      label: 'of Viewer',\n      value: 'viewer'\n    }, {\n      label: 'of Submission',\n      value: 'submission'\n    }, {\n      label: 'of Location',\n      value: 'location'\n    }, {\n      label: 'UTC',\n      value: 'utc'\n    }]\n  }\n}, {\n  type: 'select',\n  input: true,\n  key: 'timezone',\n  label: 'Select Timezone',\n  tooltip: 'Select the timezone you wish to display this Date',\n  weight: 31,\n  lazyLoad: true,\n  defaultValue: '',\n  valueProperty: 'name',\n  dataSrc: 'url',\n  data: {\n    url: '{{options.cdnUrl}}/timezones.json'\n  },\n  template: '<span>{{ item.label }}</span>',\n  conditional: {\n    json: {\n      '===': [{\n        var: 'data.displayInTimezone'\n      }, 'location']\n    }\n  }\n}, {\n  type: 'checkbox',\n  input: true,\n  key: 'useLocaleSettings',\n  label: 'Use Locale Settings',\n  tooltip: 'Use locale settings to display date and time.',\n  weight: 51\n}, {\n  type: 'checkbox',\n  input: true,\n  key: 'allowInput',\n  label: 'Allow Manual Input',\n  tooltip: 'Check this if you would like to allow the user to manually enter in the date.',\n  weight: 51\n}, {\n  type: 'textfield',\n  input: true,\n  key: 'format',\n  label: 'Format',\n  placeholder: 'Format',\n  description: 'Use formats provided by <a href=\"https://github.com/angular-ui/bootstrap/tree/master/src/dateparser/docs#uibdateparsers-format-codes\" target=\"_blank\">DateParser Codes</a>',\n  tooltip: 'The date format for displaying the datetime value.',\n  weight: 52\n}, {\n  type: 'editgrid',\n  input: true,\n  key: 'shortcutButtons',\n  label: 'Shortcut Buttons',\n  description: 'You can specify few buttons which will be shown above the calendar. Use Label to specify the name of the button and onClick to specify which date/time will be set when user clicks the button. E.g, date = new Date()',\n  templates: {\n    header: '<div class=\"row\">\\n  <div class=\"col-sm-3\">Label</div>\\n  <div class=\"col-sm-6\">onClick</div>\\n</div>',\n    row: '<div class=\"row\">\\n      <div class=\"col-sm-3\">\\n        {{ flattenedComponents.label.getView(row.label) }}\\n      </div>\\n      <div class=\"col-sm-6\">\\n        {{ flattenedComponents.onClick.getView(row.onClick) }}\\n      </div>\\n      {% if (!instance.disabled) { %}\\n        <div class=\"col-sm-3\">\\n          <div class=\"btn-group pull-right\">\\n            <button class=\"btn btn-default btn-light btn-sm editRow\"><i class=\"{{ iconClass(\"edit\") }}\"></i></button>\\n            {% if (!instance.hasRemoveButtons || instance.hasRemoveButtons()) { %}\\n              <button class=\"btn btn-danger btn-sm removeRow\"><i class=\"{{ iconClass(\"trash\") }}\"></i></button>\\n            {% } %}\\n          </div>\\n        </div>\\n      {% } %}\\n    </div>'\n  },\n  components: [{\n    label: 'Label',\n    key: 'label',\n    type: 'textfield',\n    input: true,\n    validate: {\n      required: true\n    }\n  }, {\n    label: 'onClick',\n    key: 'onClick',\n    type: 'textarea',\n    editor: 'ace',\n    input: true,\n    validate: {\n      required: true\n    }\n  }],\n  defaultValue: []\n}];\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,QAAQ,GAAG,CAAC;EACdC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,IAAI;EACXC,GAAG,EAAE,mBAAmB;EACxBC,KAAK,EAAE,qBAAqB;EAC5BC,OAAO,EAAE,kEAAkE;EAC3EC,MAAM,EAAE,EAAE;EACVC,YAAY,EAAE,QAAQ;EACtBC,OAAO,EAAE,QAAQ;EACjBC,IAAI,EAAE;IACJC,MAAM,EAAE,CAAC;MACPN,KAAK,EAAE,WAAW;MAClBN,KAAK,EAAE;IACT,CAAC,EAAE;MACDM,KAAK,EAAE,eAAe;MACtBN,KAAK,EAAE;IACT,CAAC,EAAE;MACDM,KAAK,EAAE,aAAa;MACpBN,KAAK,EAAE;IACT,CAAC,EAAE;MACDM,KAAK,EAAE,KAAK;MACZN,KAAK,EAAE;IACT,CAAC;EACH;AACF,CAAC,EAAE;EACDG,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,IAAI;EACXC,GAAG,EAAE,UAAU;EACfC,KAAK,EAAE,iBAAiB;EACxBC,OAAO,EAAE,mDAAmD;EAC5DC,MAAM,EAAE,EAAE;EACVK,QAAQ,EAAE,IAAI;EACdJ,YAAY,EAAE,EAAE;EAChBK,aAAa,EAAE,MAAM;EACrBJ,OAAO,EAAE,KAAK;EACdC,IAAI,EAAE;IACJI,GAAG,EAAE;EACP,CAAC;EACDC,QAAQ,EAAE,+BAA+B;EACzCC,WAAW,EAAE;IACXC,IAAI,EAAE;MACJ,KAAK,EAAE,CAAC;QACNC,GAAG,EAAE;MACP,CAAC,EAAE,UAAU;IACf;EACF;AACF,CAAC,EAAE;EACDhB,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,IAAI;EACXC,GAAG,EAAE,mBAAmB;EACxBC,KAAK,EAAE,qBAAqB;EAC5BC,OAAO,EAAE,+CAA+C;EACxDC,MAAM,EAAE;AACV,CAAC,EAAE;EACDL,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,IAAI;EACXC,GAAG,EAAE,YAAY;EACjBC,KAAK,EAAE,oBAAoB;EAC3BC,OAAO,EAAE,+EAA+E;EACxFC,MAAM,EAAE;AACV,CAAC,EAAE;EACDL,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,IAAI;EACXC,GAAG,EAAE,QAAQ;EACbC,KAAK,EAAE,QAAQ;EACfc,WAAW,EAAE,QAAQ;EACrBC,WAAW,EAAE,4KAA4K;EACzLd,OAAO,EAAE,oDAAoD;EAC7DC,MAAM,EAAE;AACV,CAAC,EAAE;EACDL,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,IAAI;EACXC,GAAG,EAAE,iBAAiB;EACtBC,KAAK,EAAE,kBAAkB;EACzBe,WAAW,EAAE,wNAAwN;EACrOC,SAAS,EAAE;IACTC,MAAM,EAAE,uGAAuG;IAC/GC,GAAG,EAAE;EACP,CAAC;EACDC,UAAU,EAAE,CAAC;IACXnB,KAAK,EAAE,OAAO;IACdD,GAAG,EAAE,OAAO;IACZF,IAAI,EAAE,WAAW;IACjBC,KAAK,EAAE,IAAI;IACXsB,QAAQ,EAAE;MACRC,QAAQ,EAAE;IACZ;EACF,CAAC,EAAE;IACDrB,KAAK,EAAE,SAAS;IAChBD,GAAG,EAAE,SAAS;IACdF,IAAI,EAAE,UAAU;IAChByB,MAAM,EAAE,KAAK;IACbxB,KAAK,EAAE,IAAI;IACXsB,QAAQ,EAAE;MACRC,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC;EACFlB,YAAY,EAAE;AAChB,CAAC,CAAC;AACFV,OAAO,CAACE,OAAO,GAAGC,QAAQ"},"metadata":{},"sourceType":"script"}