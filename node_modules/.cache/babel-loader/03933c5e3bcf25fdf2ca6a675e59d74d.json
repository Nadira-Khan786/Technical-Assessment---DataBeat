{"ast":null,"code":"var _classCallCheck = require(\"D:/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"D:/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.browserMD5File = factory();\n})(this, function () {\n  'use strict';\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n  var sparkMd5 = createCommonjsModule(function (module, exports) {\n    (function (factory) {\n      {\n        // Node/CommonJS\n        module.exports = factory();\n      }\n    })(function (undefined) {\n      /*\n       * Fastest md5 implementation around (JKM md5).\n       * Credits: Joseph Myers\n       *\n       * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n       * @see http://jsperf.com/md5-shootout/7\n       */\n\n      /* this function is much faster,\n        so if possible we use it. Some IEs\n        are the only ones I know of that\n        need the idiotic second function,\n        generated by an if clause.  */\n      var add32 = function add32(a, b) {\n          return a + b & 0xFFFFFFFF;\n        },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n      function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32(a << s | a >>> 32 - s, b);\n      }\n      function ff(a, b, c, d, x, s, t) {\n        return cmn(b & c | ~b & d, a, b, x, s, t);\n      }\n      function gg(a, b, c, d, x, s, t) {\n        return cmn(b & d | c & ~d, a, b, x, s, t);\n      }\n      function hh(a, b, c, d, x, s, t) {\n        return cmn(b ^ c ^ d, a, b, x, s, t);\n      }\n      function ii(a, b, c, d, x, s, t) {\n        return cmn(c ^ (b | ~d), a, b, x, s, t);\n      }\n      function md5cycle(x, k) {\n        var a = x[0],\n          b = x[1],\n          c = x[2],\n          d = x[3];\n        a = ff(a, b, c, d, k[0], 7, -680876936);\n        d = ff(d, a, b, c, k[1], 12, -389564586);\n        c = ff(c, d, a, b, k[2], 17, 606105819);\n        b = ff(b, c, d, a, k[3], 22, -1044525330);\n        a = ff(a, b, c, d, k[4], 7, -176418897);\n        d = ff(d, a, b, c, k[5], 12, 1200080426);\n        c = ff(c, d, a, b, k[6], 17, -1473231341);\n        b = ff(b, c, d, a, k[7], 22, -45705983);\n        a = ff(a, b, c, d, k[8], 7, 1770035416);\n        d = ff(d, a, b, c, k[9], 12, -1958414417);\n        c = ff(c, d, a, b, k[10], 17, -42063);\n        b = ff(b, c, d, a, k[11], 22, -1990404162);\n        a = ff(a, b, c, d, k[12], 7, 1804603682);\n        d = ff(d, a, b, c, k[13], 12, -40341101);\n        c = ff(c, d, a, b, k[14], 17, -1502002290);\n        b = ff(b, c, d, a, k[15], 22, 1236535329);\n        a = gg(a, b, c, d, k[1], 5, -165796510);\n        d = gg(d, a, b, c, k[6], 9, -1069501632);\n        c = gg(c, d, a, b, k[11], 14, 643717713);\n        b = gg(b, c, d, a, k[0], 20, -373897302);\n        a = gg(a, b, c, d, k[5], 5, -701558691);\n        d = gg(d, a, b, c, k[10], 9, 38016083);\n        c = gg(c, d, a, b, k[15], 14, -660478335);\n        b = gg(b, c, d, a, k[4], 20, -405537848);\n        a = gg(a, b, c, d, k[9], 5, 568446438);\n        d = gg(d, a, b, c, k[14], 9, -1019803690);\n        c = gg(c, d, a, b, k[3], 14, -187363961);\n        b = gg(b, c, d, a, k[8], 20, 1163531501);\n        a = gg(a, b, c, d, k[13], 5, -1444681467);\n        d = gg(d, a, b, c, k[2], 9, -51403784);\n        c = gg(c, d, a, b, k[7], 14, 1735328473);\n        b = gg(b, c, d, a, k[12], 20, -1926607734);\n        a = hh(a, b, c, d, k[5], 4, -378558);\n        d = hh(d, a, b, c, k[8], 11, -2022574463);\n        c = hh(c, d, a, b, k[11], 16, 1839030562);\n        b = hh(b, c, d, a, k[14], 23, -35309556);\n        a = hh(a, b, c, d, k[1], 4, -1530992060);\n        d = hh(d, a, b, c, k[4], 11, 1272893353);\n        c = hh(c, d, a, b, k[7], 16, -155497632);\n        b = hh(b, c, d, a, k[10], 23, -1094730640);\n        a = hh(a, b, c, d, k[13], 4, 681279174);\n        d = hh(d, a, b, c, k[0], 11, -358537222);\n        c = hh(c, d, a, b, k[3], 16, -722521979);\n        b = hh(b, c, d, a, k[6], 23, 76029189);\n        a = hh(a, b, c, d, k[9], 4, -640364487);\n        d = hh(d, a, b, c, k[12], 11, -421815835);\n        c = hh(c, d, a, b, k[15], 16, 530742520);\n        b = hh(b, c, d, a, k[2], 23, -995338651);\n        a = ii(a, b, c, d, k[0], 6, -198630844);\n        d = ii(d, a, b, c, k[7], 10, 1126891415);\n        c = ii(c, d, a, b, k[14], 15, -1416354905);\n        b = ii(b, c, d, a, k[5], 21, -57434055);\n        a = ii(a, b, c, d, k[12], 6, 1700485571);\n        d = ii(d, a, b, c, k[3], 10, -1894986606);\n        c = ii(c, d, a, b, k[10], 15, -1051523);\n        b = ii(b, c, d, a, k[1], 21, -2054922799);\n        a = ii(a, b, c, d, k[8], 6, 1873313359);\n        d = ii(d, a, b, c, k[15], 10, -30611744);\n        c = ii(c, d, a, b, k[6], 15, -1560198380);\n        b = ii(b, c, d, a, k[13], 21, 1309151649);\n        a = ii(a, b, c, d, k[4], 6, -145523070);\n        d = ii(d, a, b, c, k[11], 10, -1120210379);\n        c = ii(c, d, a, b, k[2], 15, 718787259);\n        b = ii(b, c, d, a, k[9], 21, -343485551);\n        x[0] = add32(a, x[0]);\n        x[1] = add32(b, x[1]);\n        x[2] = add32(c, x[2]);\n        x[3] = add32(d, x[3]);\n      }\n      function md5blk(s) {\n        var md5blks = [],\n          i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n          md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n      }\n      function md5blk_array(a) {\n        var md5blks = [],\n          i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n          md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n      }\n      function md51(s) {\n        var n = s.length,\n          state = [1732584193, -271733879, -1732584194, 271733878],\n          i,\n          length,\n          tail,\n          tmp,\n          lo,\n          hi;\n        for (i = 64; i <= n; i += 64) {\n          md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n          tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3);\n        }\n        tail[i >> 2] |= 0x80 << (i % 4 << 3);\n        if (i > 55) {\n          md5cycle(state, tail);\n          for (i = 0; i < 16; i += 1) {\n            tail[i] = 0;\n          }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(state, tail);\n        return state;\n      }\n      function md51_array(a) {\n        var n = a.length,\n          state = [1732584193, -271733879, -1732584194, 271733878],\n          i,\n          length,\n          tail,\n          tmp,\n          lo,\n          hi;\n        for (i = 64; i <= n; i += 64) {\n          md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = i - 64 < n ? a.subarray(i - 64) : new Uint8Array(0);\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n          tail[i >> 2] |= a[i] << (i % 4 << 3);\n        }\n        tail[i >> 2] |= 0x80 << (i % 4 << 3);\n        if (i > 55) {\n          md5cycle(state, tail);\n          for (i = 0; i < 16; i += 1) {\n            tail[i] = 0;\n          }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(state, tail);\n        return state;\n      }\n      function rhex(n) {\n        var s = '',\n          j;\n        for (j = 0; j < 4; j += 1) {\n          s += hex_chr[n >> j * 8 + 4 & 0x0F] + hex_chr[n >> j * 8 & 0x0F];\n        }\n        return s;\n      }\n      function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n          x[i] = rhex(x[i]);\n        }\n        return x.join('');\n      }\n\n      // In some cases the fast add32 function cannot be used..\n      if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function add32(x, y) {\n          var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n            msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n          return msw << 16 | lsw & 0xFFFF;\n        };\n      }\n\n      // ---------------------------------------------------\n\n      /**\n       * ArrayBuffer slice polyfill.\n       *\n       * @see https://github.com/ttaubert/node-arraybuffer-slice\n       */\n\n      if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n          function clamp(val, length) {\n            val = val | 0 || 0;\n            if (val < 0) {\n              return Math.max(val + length, 0);\n            }\n            return Math.min(val, length);\n          }\n          ArrayBuffer.prototype.slice = function (from, to) {\n            var length = this.byteLength,\n              begin = clamp(from, length),\n              end = length,\n              num,\n              target,\n              targetArray,\n              sourceArray;\n            if (to !== undefined) {\n              end = clamp(to, length);\n            }\n            if (begin > end) {\n              return new ArrayBuffer(0);\n            }\n            num = end - begin;\n            target = new ArrayBuffer(num);\n            targetArray = new Uint8Array(target);\n            sourceArray = new Uint8Array(this, begin, num);\n            targetArray.set(sourceArray);\n            return target;\n          };\n        })();\n      }\n\n      // ---------------------------------------------------\n\n      /**\n       * Helpers.\n       */\n\n      function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n          str = unescape(encodeURIComponent(str));\n        }\n        return str;\n      }\n      function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n          buff = new ArrayBuffer(length),\n          arr = new Uint8Array(buff),\n          i;\n        for (i = 0; i < length; i += 1) {\n          arr[i] = str.charCodeAt(i);\n        }\n        return returnUInt8Array ? arr : buff;\n      }\n      function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n      }\n      function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n        return returnUInt8Array ? result : result.buffer;\n      }\n      function hexToBinaryString(hex) {\n        var bytes = [],\n          length = hex.length,\n          x;\n        for (x = 0; x < length - 1; x += 2) {\n          bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n        return String.fromCharCode.apply(String, bytes);\n      }\n\n      // ---------------------------------------------------\n\n      /**\n       * SparkMD5 OOP implementation.\n       *\n       * Use this class to perform an incremental md5, otherwise use the\n       * static methods instead.\n       */\n\n      function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n      }\n\n      /**\n       * Appends a string.\n       * A conversion will be applied if an utf8 string is detected.\n       *\n       * @param {String} str The string to be appended\n       *\n       * @return {SparkMD5} The instance itself\n       */\n      SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n        return this;\n      };\n\n      /**\n       * Appends a binary string.\n       *\n       * @param {String} contents The binary string to be appended\n       *\n       * @return {SparkMD5} The instance itself\n       */\n      SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n        var length = this._buff.length,\n          i;\n        for (i = 64; i <= length; i += 64) {\n          md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n        this._buff = this._buff.substring(i - 64);\n        return this;\n      };\n\n      /**\n       * Finishes the incremental computation, reseting the internal state and\n       * returning the result.\n       *\n       * @param {Boolean} raw True to get the raw string, false to get the hex string\n       *\n       * @return {String} The result\n       */\n      SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n          length = buff.length,\n          i,\n          tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n          ret;\n        for (i = 0; i < length; i += 1) {\n          tail[i >> 2] |= buff.charCodeAt(i) << (i % 4 << 3);\n        }\n        this._finish(tail, length);\n        ret = hex(this._hash);\n        if (raw) {\n          ret = hexToBinaryString(ret);\n        }\n        this.reset();\n        return ret;\n      };\n\n      /**\n       * Resets the internal state of the computation.\n       *\n       * @return {SparkMD5} The instance itself\n       */\n      SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n        return this;\n      };\n\n      /**\n       * Gets the internal state of the computation.\n       *\n       * @return {Object} The state\n       */\n      SparkMD5.prototype.getState = function () {\n        return {\n          buff: this._buff,\n          length: this._length,\n          hash: this._hash\n        };\n      };\n\n      /**\n       * Gets the internal state of the computation.\n       *\n       * @param {Object} state The state\n       *\n       * @return {SparkMD5} The instance itself\n       */\n      SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n        return this;\n      };\n\n      /**\n       * Releases memory used by the incremental buffer and other additional\n       * resources. If you plan to use the instance again, use reset instead.\n       */\n      SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n      };\n\n      /**\n       * Finish the final calculation based on the tail.\n       *\n       * @param {Array}  tail   The tail (will be modified)\n       * @param {Number} length The length of the remaining buffer\n       */\n      SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n          tmp,\n          lo,\n          hi;\n        tail[i >> 2] |= 0x80 << (i % 4 << 3);\n        if (i > 55) {\n          md5cycle(this._hash, tail);\n          for (i = 0; i < 16; i += 1) {\n            tail[i] = 0;\n          }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n      };\n\n      /**\n       * Performs the md5 hash on a string.\n       * A conversion will be applied if utf8 string is detected.\n       *\n       * @param {String}  str The string\n       * @param {Boolean} raw True to get the raw string, false to get the hex string\n       *\n       * @return {String} The result\n       */\n      SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n      };\n\n      /**\n       * Performs the md5 hash on a binary string.\n       *\n       * @param {String}  content The binary string\n       * @param {Boolean} raw     True to get the raw string, false to get the hex string\n       *\n       * @return {String} The result\n       */\n      SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n          ret = hex(hash);\n        return raw ? hexToBinaryString(ret) : ret;\n      };\n\n      // ---------------------------------------------------\n\n      /**\n       * SparkMD5 OOP implementation for array buffers.\n       *\n       * Use this class to perform an incremental md5 ONLY for array buffers.\n       */\n      SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n      };\n\n      /**\n       * Appends an array buffer.\n       *\n       * @param {ArrayBuffer} arr The array to be appended\n       *\n       * @return {SparkMD5.ArrayBuffer} The instance itself\n       */\n      SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n          length = buff.length,\n          i;\n        this._length += arr.byteLength;\n        for (i = 64; i <= length; i += 64) {\n          md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n        this._buff = i - 64 < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n        return this;\n      };\n\n      /**\n       * Finishes the incremental computation, reseting the internal state and\n       * returning the result.\n       *\n       * @param {Boolean} raw True to get the raw string, false to get the hex string\n       *\n       * @return {String} The result\n       */\n      SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n          length = buff.length,\n          tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n          i,\n          ret;\n        for (i = 0; i < length; i += 1) {\n          tail[i >> 2] |= buff[i] << (i % 4 << 3);\n        }\n        this._finish(tail, length);\n        ret = hex(this._hash);\n        if (raw) {\n          ret = hexToBinaryString(ret);\n        }\n        this.reset();\n        return ret;\n      };\n\n      /**\n       * Resets the internal state of the computation.\n       *\n       * @return {SparkMD5.ArrayBuffer} The instance itself\n       */\n      SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n        return this;\n      };\n\n      /**\n       * Gets the internal state of the computation.\n       *\n       * @return {Object} The state\n       */\n      SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n        return state;\n      };\n\n      /**\n       * Gets the internal state of the computation.\n       *\n       * @param {Object} state The state\n       *\n       * @return {SparkMD5.ArrayBuffer} The instance itself\n       */\n      SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n        return SparkMD5.prototype.setState.call(this, state);\n      };\n      SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n      SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n      /**\n       * Performs the md5 hash on an array buffer.\n       *\n       * @param {ArrayBuffer} arr The array buffer\n       * @param {Boolean}     raw True to get the raw string, false to get the hex one\n       *\n       * @return {String} The result\n       */\n      SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n          ret = hex(hash);\n        return raw ? hexToBinaryString(ret) : ret;\n      };\n      return SparkMD5;\n    });\n  });\n  var BMF = /*#__PURE__*/function () {\n    function BMF() {\n      _classCallCheck(this, BMF);\n    }\n    _createClass(BMF, [{\n      key: \"md5\",\n      value: function md5(file, md5Fn, progressFn) {\n        var _this = this;\n        this.aborted = false;\n        this.progress = 0;\n        var currentChunk = 0;\n        var blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice;\n        var chunkSize = 2097152;\n        var chunks = Math.ceil(file.size / chunkSize);\n        var spark = new sparkMd5.ArrayBuffer();\n        var reader = new FileReader();\n        loadNext();\n        reader.onloadend = function (e) {\n          spark.append(e.target.result); // Append array buffer\n          currentChunk++;\n          _this.progress = currentChunk / chunks;\n          if (progressFn && typeof progressFn === 'function') {\n            progressFn(_this.progress);\n          }\n          if (_this.aborted) {\n            md5Fn('aborted');\n            return;\n          }\n          if (currentChunk < chunks) {\n            loadNext();\n          } else {\n            md5Fn(null, spark.end());\n          }\n        };\n\n        /////////////////////////\n        function loadNext() {\n          var start = currentChunk * chunkSize;\n          var end = start + chunkSize >= file.size ? file.size : start + chunkSize;\n          reader.readAsArrayBuffer(blobSlice.call(file, start, end));\n        }\n      }\n    }, {\n      key: \"abort\",\n      value: function abort() {\n        this.aborted = true;\n      }\n    }]);\n    return BMF;\n  }();\n  return BMF;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","browserMD5File","createCommonjsModule","fn","sparkMd5","undefined","add32","a","b","hex_chr","cmn","q","x","s","t","ff","c","d","gg","hh","ii","md5cycle","k","md5blk","md5blks","i","charCodeAt","md5blk_array","md51","n","length","state","tail","tmp","lo","hi","substring","toString","match","parseInt","md51_array","subarray","Uint8Array","rhex","j","hex","join","y","lsw","msw","ArrayBuffer","prototype","slice","clamp","val","Math","max","min","from","to","byteLength","begin","end","num","target","targetArray","sourceArray","set","toUtf8","str","test","unescape","encodeURIComponent","utf8Str2ArrayBuffer","returnUInt8Array","buff","arr","arrayBuffer2Utf8Str","String","fromCharCode","apply","concatenateArrayBuffers","first","second","result","buffer","hexToBinaryString","bytes","push","substr","SparkMD5","reset","append","appendBinary","contents","_buff","_length","_hash","raw","ret","_finish","getState","hash","setState","destroy","hashBinary","content","call","BMF","file","md5Fn","progressFn","aborted","progress","currentChunk","blobSlice","File","mozSlice","webkitSlice","chunkSize","chunks","ceil","size","spark","reader","FileReader","loadNext","onloadend","e","start","readAsArrayBuffer"],"sources":["D:/task/node_modules/browser-md5-file/dist/index.umd.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.browserMD5File = factory());\n}(this, (function () { 'use strict';\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar sparkMd5 = createCommonjsModule(function (module, exports) {\n\t(function (factory) {\n\t    {\n\t        // Node/CommonJS\n\t        module.exports = factory();\n\t    }\n\t}(function (undefined) {\n\n\t    /*\n\t     * Fastest md5 implementation around (JKM md5).\n\t     * Credits: Joseph Myers\n\t     *\n\t     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n\t     * @see http://jsperf.com/md5-shootout/7\n\t     */\n\n\t    /* this function is much faster,\n\t      so if possible we use it. Some IEs\n\t      are the only ones I know of that\n\t      need the idiotic second function,\n\t      generated by an if clause.  */\n\t    var add32 = function (a, b) {\n\t        return (a + b) & 0xFFFFFFFF;\n\t    },\n\t        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n\t    function cmn(q, a, b, x, s, t) {\n\t        a = add32(add32(a, q), add32(x, t));\n\t        return add32((a << s) | (a >>> (32 - s)), b);\n\t    }\n\n\t    function ff(a, b, c, d, x, s, t) {\n\t        return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n\t    }\n\n\t    function gg(a, b, c, d, x, s, t) {\n\t        return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n\t    }\n\n\t    function hh(a, b, c, d, x, s, t) {\n\t        return cmn(b ^ c ^ d, a, b, x, s, t);\n\t    }\n\n\t    function ii(a, b, c, d, x, s, t) {\n\t        return cmn(c ^ (b | (~d)), a, b, x, s, t);\n\t    }\n\n\t    function md5cycle(x, k) {\n\t        var a = x[0],\n\t            b = x[1],\n\t            c = x[2],\n\t            d = x[3];\n\n\t        a = ff(a, b, c, d, k[0], 7, -680876936);\n\t        d = ff(d, a, b, c, k[1], 12, -389564586);\n\t        c = ff(c, d, a, b, k[2], 17, 606105819);\n\t        b = ff(b, c, d, a, k[3], 22, -1044525330);\n\t        a = ff(a, b, c, d, k[4], 7, -176418897);\n\t        d = ff(d, a, b, c, k[5], 12, 1200080426);\n\t        c = ff(c, d, a, b, k[6], 17, -1473231341);\n\t        b = ff(b, c, d, a, k[7], 22, -45705983);\n\t        a = ff(a, b, c, d, k[8], 7, 1770035416);\n\t        d = ff(d, a, b, c, k[9], 12, -1958414417);\n\t        c = ff(c, d, a, b, k[10], 17, -42063);\n\t        b = ff(b, c, d, a, k[11], 22, -1990404162);\n\t        a = ff(a, b, c, d, k[12], 7, 1804603682);\n\t        d = ff(d, a, b, c, k[13], 12, -40341101);\n\t        c = ff(c, d, a, b, k[14], 17, -1502002290);\n\t        b = ff(b, c, d, a, k[15], 22, 1236535329);\n\n\t        a = gg(a, b, c, d, k[1], 5, -165796510);\n\t        d = gg(d, a, b, c, k[6], 9, -1069501632);\n\t        c = gg(c, d, a, b, k[11], 14, 643717713);\n\t        b = gg(b, c, d, a, k[0], 20, -373897302);\n\t        a = gg(a, b, c, d, k[5], 5, -701558691);\n\t        d = gg(d, a, b, c, k[10], 9, 38016083);\n\t        c = gg(c, d, a, b, k[15], 14, -660478335);\n\t        b = gg(b, c, d, a, k[4], 20, -405537848);\n\t        a = gg(a, b, c, d, k[9], 5, 568446438);\n\t        d = gg(d, a, b, c, k[14], 9, -1019803690);\n\t        c = gg(c, d, a, b, k[3], 14, -187363961);\n\t        b = gg(b, c, d, a, k[8], 20, 1163531501);\n\t        a = gg(a, b, c, d, k[13], 5, -1444681467);\n\t        d = gg(d, a, b, c, k[2], 9, -51403784);\n\t        c = gg(c, d, a, b, k[7], 14, 1735328473);\n\t        b = gg(b, c, d, a, k[12], 20, -1926607734);\n\n\t        a = hh(a, b, c, d, k[5], 4, -378558);\n\t        d = hh(d, a, b, c, k[8], 11, -2022574463);\n\t        c = hh(c, d, a, b, k[11], 16, 1839030562);\n\t        b = hh(b, c, d, a, k[14], 23, -35309556);\n\t        a = hh(a, b, c, d, k[1], 4, -1530992060);\n\t        d = hh(d, a, b, c, k[4], 11, 1272893353);\n\t        c = hh(c, d, a, b, k[7], 16, -155497632);\n\t        b = hh(b, c, d, a, k[10], 23, -1094730640);\n\t        a = hh(a, b, c, d, k[13], 4, 681279174);\n\t        d = hh(d, a, b, c, k[0], 11, -358537222);\n\t        c = hh(c, d, a, b, k[3], 16, -722521979);\n\t        b = hh(b, c, d, a, k[6], 23, 76029189);\n\t        a = hh(a, b, c, d, k[9], 4, -640364487);\n\t        d = hh(d, a, b, c, k[12], 11, -421815835);\n\t        c = hh(c, d, a, b, k[15], 16, 530742520);\n\t        b = hh(b, c, d, a, k[2], 23, -995338651);\n\n\t        a = ii(a, b, c, d, k[0], 6, -198630844);\n\t        d = ii(d, a, b, c, k[7], 10, 1126891415);\n\t        c = ii(c, d, a, b, k[14], 15, -1416354905);\n\t        b = ii(b, c, d, a, k[5], 21, -57434055);\n\t        a = ii(a, b, c, d, k[12], 6, 1700485571);\n\t        d = ii(d, a, b, c, k[3], 10, -1894986606);\n\t        c = ii(c, d, a, b, k[10], 15, -1051523);\n\t        b = ii(b, c, d, a, k[1], 21, -2054922799);\n\t        a = ii(a, b, c, d, k[8], 6, 1873313359);\n\t        d = ii(d, a, b, c, k[15], 10, -30611744);\n\t        c = ii(c, d, a, b, k[6], 15, -1560198380);\n\t        b = ii(b, c, d, a, k[13], 21, 1309151649);\n\t        a = ii(a, b, c, d, k[4], 6, -145523070);\n\t        d = ii(d, a, b, c, k[11], 10, -1120210379);\n\t        c = ii(c, d, a, b, k[2], 15, 718787259);\n\t        b = ii(b, c, d, a, k[9], 21, -343485551);\n\n\t        x[0] = add32(a, x[0]);\n\t        x[1] = add32(b, x[1]);\n\t        x[2] = add32(c, x[2]);\n\t        x[3] = add32(d, x[3]);\n\t    }\n\n\t    function md5blk(s) {\n\t        var md5blks = [],\n\t            i; /* Andy King said do it this way. */\n\n\t        for (i = 0; i < 64; i += 4) {\n\t            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n\t        }\n\t        return md5blks;\n\t    }\n\n\t    function md5blk_array(a) {\n\t        var md5blks = [],\n\t            i; /* Andy King said do it this way. */\n\n\t        for (i = 0; i < 64; i += 4) {\n\t            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n\t        }\n\t        return md5blks;\n\t    }\n\n\t    function md51(s) {\n\t        var n = s.length,\n\t            state = [1732584193, -271733879, -1732584194, 271733878],\n\t            i,\n\t            length,\n\t            tail,\n\t            tmp,\n\t            lo,\n\t            hi;\n\n\t        for (i = 64; i <= n; i += 64) {\n\t            md5cycle(state, md5blk(s.substring(i - 64, i)));\n\t        }\n\t        s = s.substring(i - 64);\n\t        length = s.length;\n\t        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n\t        }\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(state, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\n\t        // Beware that the final length might not fit in 32 bits so we take care of that\n\t        tmp = n * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\n\t        md5cycle(state, tail);\n\t        return state;\n\t    }\n\n\t    function md51_array(a) {\n\t        var n = a.length,\n\t            state = [1732584193, -271733879, -1732584194, 271733878],\n\t            i,\n\t            length,\n\t            tail,\n\t            tmp,\n\t            lo,\n\t            hi;\n\n\t        for (i = 64; i <= n; i += 64) {\n\t            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n\t        }\n\n\t        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n\t        // containing the last element of the parent array if the sub array specified starts\n\t        // beyond the length of the parent array - weird.\n\t        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n\t        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n\t        length = a.length;\n\t        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n\t        }\n\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(state, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\n\t        // Beware that the final length might not fit in 32 bits so we take care of that\n\t        tmp = n * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\n\t        md5cycle(state, tail);\n\n\t        return state;\n\t    }\n\n\t    function rhex(n) {\n\t        var s = '',\n\t            j;\n\t        for (j = 0; j < 4; j += 1) {\n\t            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n\t        }\n\t        return s;\n\t    }\n\n\t    function hex(x) {\n\t        var i;\n\t        for (i = 0; i < x.length; i += 1) {\n\t            x[i] = rhex(x[i]);\n\t        }\n\t        return x.join('');\n\t    }\n\n\t    // In some cases the fast add32 function cannot be used..\n\t    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n\t        add32 = function (x, y) {\n\t            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n\t                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t            return (msw << 16) | (lsw & 0xFFFF);\n\t        };\n\t    }\n\n\t    // ---------------------------------------------------\n\n\t    /**\n\t     * ArrayBuffer slice polyfill.\n\t     *\n\t     * @see https://github.com/ttaubert/node-arraybuffer-slice\n\t     */\n\n\t    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n\t        (function () {\n\t            function clamp(val, length) {\n\t                val = (val | 0) || 0;\n\n\t                if (val < 0) {\n\t                    return Math.max(val + length, 0);\n\t                }\n\n\t                return Math.min(val, length);\n\t            }\n\n\t            ArrayBuffer.prototype.slice = function (from, to) {\n\t                var length = this.byteLength,\n\t                    begin = clamp(from, length),\n\t                    end = length,\n\t                    num,\n\t                    target,\n\t                    targetArray,\n\t                    sourceArray;\n\n\t                if (to !== undefined) {\n\t                    end = clamp(to, length);\n\t                }\n\n\t                if (begin > end) {\n\t                    return new ArrayBuffer(0);\n\t                }\n\n\t                num = end - begin;\n\t                target = new ArrayBuffer(num);\n\t                targetArray = new Uint8Array(target);\n\n\t                sourceArray = new Uint8Array(this, begin, num);\n\t                targetArray.set(sourceArray);\n\n\t                return target;\n\t            };\n\t        })();\n\t    }\n\n\t    // ---------------------------------------------------\n\n\t    /**\n\t     * Helpers.\n\t     */\n\n\t    function toUtf8(str) {\n\t        if (/[\\u0080-\\uFFFF]/.test(str)) {\n\t            str = unescape(encodeURIComponent(str));\n\t        }\n\n\t        return str;\n\t    }\n\n\t    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n\t        var length = str.length,\n\t           buff = new ArrayBuffer(length),\n\t           arr = new Uint8Array(buff),\n\t           i;\n\n\t        for (i = 0; i < length; i += 1) {\n\t            arr[i] = str.charCodeAt(i);\n\t        }\n\n\t        return returnUInt8Array ? arr : buff;\n\t    }\n\n\t    function arrayBuffer2Utf8Str(buff) {\n\t        return String.fromCharCode.apply(null, new Uint8Array(buff));\n\t    }\n\n\t    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n\t        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n\t        result.set(new Uint8Array(first));\n\t        result.set(new Uint8Array(second), first.byteLength);\n\n\t        return returnUInt8Array ? result : result.buffer;\n\t    }\n\n\t    function hexToBinaryString(hex) {\n\t        var bytes = [],\n\t            length = hex.length,\n\t            x;\n\n\t        for (x = 0; x < length - 1; x += 2) {\n\t            bytes.push(parseInt(hex.substr(x, 2), 16));\n\t        }\n\n\t        return String.fromCharCode.apply(String, bytes);\n\t    }\n\n\t    // ---------------------------------------------------\n\n\t    /**\n\t     * SparkMD5 OOP implementation.\n\t     *\n\t     * Use this class to perform an incremental md5, otherwise use the\n\t     * static methods instead.\n\t     */\n\n\t    function SparkMD5() {\n\t        // call reset to init the instance\n\t        this.reset();\n\t    }\n\n\t    /**\n\t     * Appends a string.\n\t     * A conversion will be applied if an utf8 string is detected.\n\t     *\n\t     * @param {String} str The string to be appended\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.append = function (str) {\n\t        // Converts the string to utf8 bytes if necessary\n\t        // Then append as binary\n\t        this.appendBinary(toUtf8(str));\n\n\t        return this;\n\t    };\n\n\t    /**\n\t     * Appends a binary string.\n\t     *\n\t     * @param {String} contents The binary string to be appended\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.appendBinary = function (contents) {\n\t        this._buff += contents;\n\t        this._length += contents.length;\n\n\t        var length = this._buff.length,\n\t            i;\n\n\t        for (i = 64; i <= length; i += 64) {\n\t            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n\t        }\n\n\t        this._buff = this._buff.substring(i - 64);\n\n\t        return this;\n\t    };\n\n\t    /**\n\t     * Finishes the incremental computation, reseting the internal state and\n\t     * returning the result.\n\t     *\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.prototype.end = function (raw) {\n\t        var buff = this._buff,\n\t            length = buff.length,\n\t            i,\n\t            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t            ret;\n\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n\t        }\n\n\t        this._finish(tail, length);\n\t        ret = hex(this._hash);\n\n\t        if (raw) {\n\t            ret = hexToBinaryString(ret);\n\t        }\n\n\t        this.reset();\n\n\t        return ret;\n\t    };\n\n\t    /**\n\t     * Resets the internal state of the computation.\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.reset = function () {\n\t        this._buff = '';\n\t        this._length = 0;\n\t        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n\t        return this;\n\t    };\n\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @return {Object} The state\n\t     */\n\t    SparkMD5.prototype.getState = function () {\n\t        return {\n\t            buff: this._buff,\n\t            length: this._length,\n\t            hash: this._hash\n\t        };\n\t    };\n\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @param {Object} state The state\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.setState = function (state) {\n\t        this._buff = state.buff;\n\t        this._length = state.length;\n\t        this._hash = state.hash;\n\n\t        return this;\n\t    };\n\n\t    /**\n\t     * Releases memory used by the incremental buffer and other additional\n\t     * resources. If you plan to use the instance again, use reset instead.\n\t     */\n\t    SparkMD5.prototype.destroy = function () {\n\t        delete this._hash;\n\t        delete this._buff;\n\t        delete this._length;\n\t    };\n\n\t    /**\n\t     * Finish the final calculation based on the tail.\n\t     *\n\t     * @param {Array}  tail   The tail (will be modified)\n\t     * @param {Number} length The length of the remaining buffer\n\t     */\n\t    SparkMD5.prototype._finish = function (tail, length) {\n\t        var i = length,\n\t            tmp,\n\t            lo,\n\t            hi;\n\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(this._hash, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\n\t        // Do the final computation based on the tail and length\n\t        // Beware that the final length may not fit in 32 bits so we take care of that\n\t        tmp = this._length * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t        md5cycle(this._hash, tail);\n\t    };\n\n\t    /**\n\t     * Performs the md5 hash on a string.\n\t     * A conversion will be applied if utf8 string is detected.\n\t     *\n\t     * @param {String}  str The string\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.hash = function (str, raw) {\n\t        // Converts the string to utf8 bytes if necessary\n\t        // Then compute it using the binary function\n\t        return SparkMD5.hashBinary(toUtf8(str), raw);\n\t    };\n\n\t    /**\n\t     * Performs the md5 hash on a binary string.\n\t     *\n\t     * @param {String}  content The binary string\n\t     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.hashBinary = function (content, raw) {\n\t        var hash = md51(content),\n\t            ret = hex(hash);\n\n\t        return raw ? hexToBinaryString(ret) : ret;\n\t    };\n\n\t    // ---------------------------------------------------\n\n\t    /**\n\t     * SparkMD5 OOP implementation for array buffers.\n\t     *\n\t     * Use this class to perform an incremental md5 ONLY for array buffers.\n\t     */\n\t    SparkMD5.ArrayBuffer = function () {\n\t        // call reset to init the instance\n\t        this.reset();\n\t    };\n\n\t    /**\n\t     * Appends an array buffer.\n\t     *\n\t     * @param {ArrayBuffer} arr The array to be appended\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n\t        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n\t            length = buff.length,\n\t            i;\n\n\t        this._length += arr.byteLength;\n\n\t        for (i = 64; i <= length; i += 64) {\n\t            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n\t        }\n\n\t        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n\t        return this;\n\t    };\n\n\t    /**\n\t     * Finishes the incremental computation, reseting the internal state and\n\t     * returning the result.\n\t     *\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n\t        var buff = this._buff,\n\t            length = buff.length,\n\t            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t            i,\n\t            ret;\n\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n\t        }\n\n\t        this._finish(tail, length);\n\t        ret = hex(this._hash);\n\n\t        if (raw) {\n\t            ret = hexToBinaryString(ret);\n\t        }\n\n\t        this.reset();\n\n\t        return ret;\n\t    };\n\n\t    /**\n\t     * Resets the internal state of the computation.\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.reset = function () {\n\t        this._buff = new Uint8Array(0);\n\t        this._length = 0;\n\t        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n\t        return this;\n\t    };\n\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @return {Object} The state\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.getState = function () {\n\t        var state = SparkMD5.prototype.getState.call(this);\n\n\t        // Convert buffer to a string\n\t        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n\t        return state;\n\t    };\n\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @param {Object} state The state\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n\t        // Convert string to buffer\n\t        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n\t        return SparkMD5.prototype.setState.call(this, state);\n\t    };\n\n\t    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n\t    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n\t    /**\n\t     * Performs the md5 hash on an array buffer.\n\t     *\n\t     * @param {ArrayBuffer} arr The array buffer\n\t     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n\t        var hash = md51_array(new Uint8Array(arr)),\n\t            ret = hex(hash);\n\n\t        return raw ? hexToBinaryString(ret) : ret;\n\t    };\n\n\t    return SparkMD5;\n\t}));\n\t});\n\n\tclass BMF {\n\t  md5(file, md5Fn, progressFn) {\n\t    this.aborted = false;\n\t    this.progress = 0;\n\t    let currentChunk = 0;\n\t    const blobSlice =\n\t      File.prototype.slice ||\n\t      File.prototype.mozSlice ||\n\t      File.prototype.webkitSlice;\n\t    const chunkSize = 2097152;\n\t    const chunks = Math.ceil(file.size / chunkSize);\n\t    const spark = new sparkMd5.ArrayBuffer();\n\t    const reader = new FileReader();\n\n\t    loadNext();\n\n\t    reader.onloadend = e => {\n\t      spark.append(e.target.result); // Append array buffer\n\t      currentChunk++;\n\t      this.progress = currentChunk / chunks;\n\n\t      if (progressFn && typeof progressFn === 'function') {\n\t        progressFn(this.progress);\n\t      }\n\n\t      if (this.aborted) {\n\t        md5Fn('aborted');\n\t        return\n\t      }\n\n\t      if (currentChunk < chunks) {\n\t        loadNext();\n\t      } else {\n\t        md5Fn(null, spark.end());\n\t      }\n\t    };\n\n\t    /////////////////////////\n\t    function loadNext() {\n\t      const start = currentChunk * chunkSize;\n\t      const end = start + chunkSize >= file.size ? file.size : start + chunkSize;\n\t      reader.readAsArrayBuffer(blobSlice.call(file, start, end));\n\t    }\n\t  }\n\n\t  abort() {\n\t    this.aborted = true;\n\t  }\n\t}\n\n\treturn BMF;\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}