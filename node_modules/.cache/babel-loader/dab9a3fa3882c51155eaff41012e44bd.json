{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.string.trim.js\");\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\nvar _xhr = _interopRequireDefault(require(\"./xhr\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar s3 = function s3(formio) {\n  return {\n    uploadFile: function uploadFile(file, fileName, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, abortCallback) {\n      return _xhr.default.upload(formio, 's3', function (xhr, response) {\n        response.data.fileName = fileName;\n        response.data.key = _xhr.default.path([response.data.key, dir, fileName]);\n        if (response.signed) {\n          xhr.openAndSetHeaders('PUT', response.signed);\n          xhr.setRequestHeader('Content-Type', file.type);\n          return file;\n        } else {\n          var fd = new FormData();\n          for (var key in response.data) {\n            fd.append(key, response.data[key]);\n          }\n          fd.append('file', file);\n          xhr.openAndSetHeaders('POST', response.url);\n          return fd;\n        }\n      }, file, fileName, dir, progressCallback, groupPermissions, groupId, abortCallback).then(function (response) {\n        return {\n          storage: 's3',\n          name: fileName,\n          bucket: response.bucket,\n          key: response.data.key,\n          url: _xhr.default.path([response.url, response.data.key]),\n          acl: response.data.acl,\n          size: file.size,\n          type: file.type\n        };\n      });\n    },\n    downloadFile: function downloadFile(file) {\n      if (file.acl !== 'public-read') {\n        return formio.makeRequest('file', \"\".concat(formio.formUrl, \"/storage/s3?bucket=\").concat(_xhr.default.trim(file.bucket), \"&key=\").concat(_xhr.default.trim(file.key)), 'GET');\n      } else {\n        return _nativePromiseOnly.default.resolve(file);\n      }\n    }\n  };\n};\ns3.title = 'S3';\nvar _default = s3;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","require","_nativePromiseOnly","_interopRequireDefault","_xhr","obj","__esModule","s3","formio","uploadFile","file","fileName","dir","progressCallback","url","options","fileKey","groupPermissions","groupId","abortCallback","upload","xhr","response","data","key","path","signed","openAndSetHeaders","setRequestHeader","type","fd","FormData","append","then","storage","name","bucket","acl","size","downloadFile","makeRequest","concat","formUrl","trim","resolve","title","_default"],"sources":["D:/task/node_modules/formiojs/providers/storage/s3.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nvar _xhr = _interopRequireDefault(require(\"./xhr\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar s3 = function s3(formio) {\n  return {\n    uploadFile: function uploadFile(file, fileName, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, abortCallback) {\n      return _xhr.default.upload(formio, 's3', function (xhr, response) {\n        response.data.fileName = fileName;\n        response.data.key = _xhr.default.path([response.data.key, dir, fileName]);\n\n        if (response.signed) {\n          xhr.openAndSetHeaders('PUT', response.signed);\n          xhr.setRequestHeader('Content-Type', file.type);\n          return file;\n        } else {\n          var fd = new FormData();\n\n          for (var key in response.data) {\n            fd.append(key, response.data[key]);\n          }\n\n          fd.append('file', file);\n          xhr.openAndSetHeaders('POST', response.url);\n          return fd;\n        }\n      }, file, fileName, dir, progressCallback, groupPermissions, groupId, abortCallback).then(function (response) {\n        return {\n          storage: 's3',\n          name: fileName,\n          bucket: response.bucket,\n          key: response.data.key,\n          url: _xhr.default.path([response.url, response.data.key]),\n          acl: response.data.acl,\n          size: file.size,\n          type: file.type\n        };\n      });\n    },\n    downloadFile: function downloadFile(file) {\n      if (file.acl !== 'public-read') {\n        return formio.makeRequest('file', \"\".concat(formio.formUrl, \"/storage/s3?bucket=\").concat(_xhr.default.trim(file.bucket), \"&key=\").concat(_xhr.default.trim(file.key)), 'GET');\n      } else {\n        return _nativePromiseOnly.default.resolve(file);\n      }\n    }\n  };\n};\n\ns3.title = 'S3';\nvar _default = s3;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}