{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _uuid = require(\"uuid\");\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar indexeddb = function indexeddb() {\n  return {\n    title: 'indexedDB',\n    name: 'indexeddb',\n    uploadFile: function uploadFile(file, fileName, dir, progressCallback, url, options) {\n      var _this = this;\n      if (!('indexedDB' in window)) {\n        console.log('This browser doesn\\'t support IndexedDB');\n        return;\n      }\n      return new _nativePromiseOnly.default(function (resolve) {\n        var request = indexedDB.open(options.indexeddb, 3);\n        request.onsuccess = function (event) {\n          var db = event.target.result;\n          resolve(db);\n        };\n        request.onupgradeneeded = function (e) {\n          var db = e.target.result;\n          db.createObjectStore(options.indexeddbTable);\n        };\n      }).then(function (db) {\n        var reader = new FileReader();\n        return new _nativePromiseOnly.default(function (resolve, reject) {\n          reader.onload = function () {\n            var blobObject = new Blob([file], {\n              type: file.type\n            });\n            var id = (0, _uuid.v4)(blobObject);\n            var data = {\n              id: id,\n              data: blobObject,\n              name: file.name,\n              size: file.size,\n              type: file.type,\n              url: url\n            };\n            var trans = db.transaction([options.indexeddbTable], 'readwrite');\n            var addReq = trans.objectStore(options.indexeddbTable).put(data, id);\n            addReq.onerror = function (e) {\n              console.log('error storing data');\n              console.error(e);\n            };\n            trans.oncomplete = function () {\n              resolve({\n                storage: 'indexeddb',\n                name: file.name,\n                size: file.size,\n                type: file.type,\n                url: url,\n                id: id\n              });\n            };\n          };\n          reader.onerror = function () {\n            return reject(_this);\n          };\n          reader.readAsDataURL(file);\n        });\n      });\n    },\n    downloadFile: function downloadFile(file, options) {\n      var _this2 = this;\n      return new _nativePromiseOnly.default(function (resolve) {\n        var request = indexedDB.open(options.indexeddb, 3);\n        request.onsuccess = function (event) {\n          var db = event.target.result;\n          resolve(db);\n        };\n      }).then(function (db) {\n        return new _nativePromiseOnly.default(function (resolve, reject) {\n          var trans = db.transaction([options.indexeddbTable], 'readonly');\n          var store = trans.objectStore(options.indexeddbTable).get(file.id);\n          store.onsuccess = function () {\n            trans.oncomplete = function () {\n              var result = store.result;\n              var dbFile = new File([store.result.data], file.name, {\n                type: store.result.type\n              });\n              var reader = new FileReader();\n              reader.onload = function (event) {\n                result.url = event.target.result;\n                result.storage = file.storage;\n                resolve(result);\n              };\n              reader.onerror = function () {\n                return reject(_this2);\n              };\n              reader.readAsDataURL(dbFile);\n            };\n          };\n          store.onerror = function () {\n            return reject(_this2);\n          };\n        });\n      });\n    },\n    deleteFile: function deleteFile(file, options) {\n      var _this3 = this;\n      return new _nativePromiseOnly.default(function (resolve) {\n        var request = indexedDB.open(options.indexeddb, 3);\n        request.onsuccess = function (event) {\n          var db = event.target.result;\n          resolve(db);\n        };\n      }).then(function (db) {\n        return new _nativePromiseOnly.default(function (resolve, reject) {\n          var trans = db.transaction([options.indexeddbTable], 'readwrite');\n          var store = trans.objectStore(options.indexeddbTable).delete(file.id);\n          store.onsuccess = function () {\n            trans.oncomplete = function () {\n              var result = store.result;\n              resolve(result);\n            };\n          };\n          store.onerror = function () {\n            return reject(_this3);\n          };\n        });\n      });\n    }\n  };\n};\nindexeddb.title = 'IndexedDB';\nvar _default = indexeddb;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_uuid","require","_nativePromiseOnly","_interopRequireDefault","obj","__esModule","indexeddb","title","name","uploadFile","file","fileName","dir","progressCallback","url","options","_this","window","console","log","resolve","request","indexedDB","open","onsuccess","event","db","target","result","onupgradeneeded","e","createObjectStore","indexeddbTable","then","reader","FileReader","reject","onload","blobObject","Blob","type","id","v4","data","size","trans","transaction","addReq","objectStore","put","onerror","error","oncomplete","storage","readAsDataURL","downloadFile","_this2","store","get","dbFile","File","deleteFile","_this3","delete","_default"],"sources":["D:/task/node_modules/formiojs/providers/storage/indexeddb.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nvar _uuid = require(\"uuid\");\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar indexeddb = function indexeddb() {\n  return {\n    title: 'indexedDB',\n    name: 'indexeddb',\n    uploadFile: function uploadFile(file, fileName, dir, progressCallback, url, options) {\n      var _this = this;\n\n      if (!('indexedDB' in window)) {\n        console.log('This browser doesn\\'t support IndexedDB');\n        return;\n      }\n\n      return new _nativePromiseOnly.default(function (resolve) {\n        var request = indexedDB.open(options.indexeddb, 3);\n\n        request.onsuccess = function (event) {\n          var db = event.target.result;\n          resolve(db);\n        };\n\n        request.onupgradeneeded = function (e) {\n          var db = e.target.result;\n          db.createObjectStore(options.indexeddbTable);\n        };\n      }).then(function (db) {\n        var reader = new FileReader();\n        return new _nativePromiseOnly.default(function (resolve, reject) {\n          reader.onload = function () {\n            var blobObject = new Blob([file], {\n              type: file.type\n            });\n            var id = (0, _uuid.v4)(blobObject);\n            var data = {\n              id: id,\n              data: blobObject,\n              name: file.name,\n              size: file.size,\n              type: file.type,\n              url: url\n            };\n            var trans = db.transaction([options.indexeddbTable], 'readwrite');\n            var addReq = trans.objectStore(options.indexeddbTable).put(data, id);\n\n            addReq.onerror = function (e) {\n              console.log('error storing data');\n              console.error(e);\n            };\n\n            trans.oncomplete = function () {\n              resolve({\n                storage: 'indexeddb',\n                name: file.name,\n                size: file.size,\n                type: file.type,\n                url: url,\n                id: id\n              });\n            };\n          };\n\n          reader.onerror = function () {\n            return reject(_this);\n          };\n\n          reader.readAsDataURL(file);\n        });\n      });\n    },\n    downloadFile: function downloadFile(file, options) {\n      var _this2 = this;\n\n      return new _nativePromiseOnly.default(function (resolve) {\n        var request = indexedDB.open(options.indexeddb, 3);\n\n        request.onsuccess = function (event) {\n          var db = event.target.result;\n          resolve(db);\n        };\n      }).then(function (db) {\n        return new _nativePromiseOnly.default(function (resolve, reject) {\n          var trans = db.transaction([options.indexeddbTable], 'readonly');\n          var store = trans.objectStore(options.indexeddbTable).get(file.id);\n\n          store.onsuccess = function () {\n            trans.oncomplete = function () {\n              var result = store.result;\n              var dbFile = new File([store.result.data], file.name, {\n                type: store.result.type\n              });\n              var reader = new FileReader();\n\n              reader.onload = function (event) {\n                result.url = event.target.result;\n                result.storage = file.storage;\n                resolve(result);\n              };\n\n              reader.onerror = function () {\n                return reject(_this2);\n              };\n\n              reader.readAsDataURL(dbFile);\n            };\n          };\n\n          store.onerror = function () {\n            return reject(_this2);\n          };\n        });\n      });\n    },\n    deleteFile: function deleteFile(file, options) {\n      var _this3 = this;\n\n      return new _nativePromiseOnly.default(function (resolve) {\n        var request = indexedDB.open(options.indexeddb, 3);\n\n        request.onsuccess = function (event) {\n          var db = event.target.result;\n          resolve(db);\n        };\n      }).then(function (db) {\n        return new _nativePromiseOnly.default(function (resolve, reject) {\n          var trans = db.transaction([options.indexeddbTable], 'readwrite');\n          var store = trans.objectStore(options.indexeddbTable).delete(file.id);\n\n          store.onsuccess = function () {\n            trans.oncomplete = function () {\n              var result = store.result;\n              resolve(result);\n            };\n          };\n\n          store.onerror = function () {\n            return reject(_this3);\n          };\n        });\n      });\n    }\n  };\n};\n\nindexeddb.title = 'IndexedDB';\nvar _default = indexeddb;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAIxB,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE3B,IAAIC,kBAAkB,GAAGC,sBAAsB,CAACF,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAE/E,SAASE,sBAAsB,CAACC,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEL,OAAO,EAAEK;EAAI,CAAC;AAAE;AAE9F,IAAIE,SAAS,GAAG,SAASA,SAAS,GAAG;EACnC,OAAO;IACLC,KAAK,EAAE,WAAW;IAClBC,IAAI,EAAE,WAAW;IACjBC,UAAU,EAAE,SAASA,UAAU,CAACC,IAAI,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,gBAAgB,EAAEC,GAAG,EAAEC,OAAO,EAAE;MACnF,IAAIC,KAAK,GAAG,IAAI;MAEhB,IAAI,EAAE,WAAW,IAAIC,MAAM,CAAC,EAAE;QAC5BC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;QACtD;MACF;MAEA,OAAO,IAAIjB,kBAAkB,CAACH,OAAO,CAAC,UAAUqB,OAAO,EAAE;QACvD,IAAIC,OAAO,GAAGC,SAAS,CAACC,IAAI,CAACR,OAAO,CAACT,SAAS,EAAE,CAAC,CAAC;QAElDe,OAAO,CAACG,SAAS,GAAG,UAAUC,KAAK,EAAE;UACnC,IAAIC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACC,MAAM;UAC5BR,OAAO,CAACM,EAAE,CAAC;QACb,CAAC;QAEDL,OAAO,CAACQ,eAAe,GAAG,UAAUC,CAAC,EAAE;UACrC,IAAIJ,EAAE,GAAGI,CAAC,CAACH,MAAM,CAACC,MAAM;UACxBF,EAAE,CAACK,iBAAiB,CAAChB,OAAO,CAACiB,cAAc,CAAC;QAC9C,CAAC;MACH,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUP,EAAE,EAAE;QACpB,IAAIQ,MAAM,GAAG,IAAIC,UAAU,EAAE;QAC7B,OAAO,IAAIjC,kBAAkB,CAACH,OAAO,CAAC,UAAUqB,OAAO,EAAEgB,MAAM,EAAE;UAC/DF,MAAM,CAACG,MAAM,GAAG,YAAY;YAC1B,IAAIC,UAAU,GAAG,IAAIC,IAAI,CAAC,CAAC7B,IAAI,CAAC,EAAE;cAChC8B,IAAI,EAAE9B,IAAI,CAAC8B;YACb,CAAC,CAAC;YACF,IAAIC,EAAE,GAAG,CAAC,CAAC,EAAEzC,KAAK,CAAC0C,EAAE,EAAEJ,UAAU,CAAC;YAClC,IAAIK,IAAI,GAAG;cACTF,EAAE,EAAEA,EAAE;cACNE,IAAI,EAAEL,UAAU;cAChB9B,IAAI,EAAEE,IAAI,CAACF,IAAI;cACfoC,IAAI,EAAElC,IAAI,CAACkC,IAAI;cACfJ,IAAI,EAAE9B,IAAI,CAAC8B,IAAI;cACf1B,GAAG,EAAEA;YACP,CAAC;YACD,IAAI+B,KAAK,GAAGnB,EAAE,CAACoB,WAAW,CAAC,CAAC/B,OAAO,CAACiB,cAAc,CAAC,EAAE,WAAW,CAAC;YACjE,IAAIe,MAAM,GAAGF,KAAK,CAACG,WAAW,CAACjC,OAAO,CAACiB,cAAc,CAAC,CAACiB,GAAG,CAACN,IAAI,EAAEF,EAAE,CAAC;YAEpEM,MAAM,CAACG,OAAO,GAAG,UAAUpB,CAAC,EAAE;cAC5BZ,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;cACjCD,OAAO,CAACiC,KAAK,CAACrB,CAAC,CAAC;YAClB,CAAC;YAEDe,KAAK,CAACO,UAAU,GAAG,YAAY;cAC7BhC,OAAO,CAAC;gBACNiC,OAAO,EAAE,WAAW;gBACpB7C,IAAI,EAAEE,IAAI,CAACF,IAAI;gBACfoC,IAAI,EAAElC,IAAI,CAACkC,IAAI;gBACfJ,IAAI,EAAE9B,IAAI,CAAC8B,IAAI;gBACf1B,GAAG,EAAEA,GAAG;gBACR2B,EAAE,EAAEA;cACN,CAAC,CAAC;YACJ,CAAC;UACH,CAAC;UAEDP,MAAM,CAACgB,OAAO,GAAG,YAAY;YAC3B,OAAOd,MAAM,CAACpB,KAAK,CAAC;UACtB,CAAC;UAEDkB,MAAM,CAACoB,aAAa,CAAC5C,IAAI,CAAC;QAC5B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IACD6C,YAAY,EAAE,SAASA,YAAY,CAAC7C,IAAI,EAAEK,OAAO,EAAE;MACjD,IAAIyC,MAAM,GAAG,IAAI;MAEjB,OAAO,IAAItD,kBAAkB,CAACH,OAAO,CAAC,UAAUqB,OAAO,EAAE;QACvD,IAAIC,OAAO,GAAGC,SAAS,CAACC,IAAI,CAACR,OAAO,CAACT,SAAS,EAAE,CAAC,CAAC;QAElDe,OAAO,CAACG,SAAS,GAAG,UAAUC,KAAK,EAAE;UACnC,IAAIC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACC,MAAM;UAC5BR,OAAO,CAACM,EAAE,CAAC;QACb,CAAC;MACH,CAAC,CAAC,CAACO,IAAI,CAAC,UAAUP,EAAE,EAAE;QACpB,OAAO,IAAIxB,kBAAkB,CAACH,OAAO,CAAC,UAAUqB,OAAO,EAAEgB,MAAM,EAAE;UAC/D,IAAIS,KAAK,GAAGnB,EAAE,CAACoB,WAAW,CAAC,CAAC/B,OAAO,CAACiB,cAAc,CAAC,EAAE,UAAU,CAAC;UAChE,IAAIyB,KAAK,GAAGZ,KAAK,CAACG,WAAW,CAACjC,OAAO,CAACiB,cAAc,CAAC,CAAC0B,GAAG,CAAChD,IAAI,CAAC+B,EAAE,CAAC;UAElEgB,KAAK,CAACjC,SAAS,GAAG,YAAY;YAC5BqB,KAAK,CAACO,UAAU,GAAG,YAAY;cAC7B,IAAIxB,MAAM,GAAG6B,KAAK,CAAC7B,MAAM;cACzB,IAAI+B,MAAM,GAAG,IAAIC,IAAI,CAAC,CAACH,KAAK,CAAC7B,MAAM,CAACe,IAAI,CAAC,EAAEjC,IAAI,CAACF,IAAI,EAAE;gBACpDgC,IAAI,EAAEiB,KAAK,CAAC7B,MAAM,CAACY;cACrB,CAAC,CAAC;cACF,IAAIN,MAAM,GAAG,IAAIC,UAAU,EAAE;cAE7BD,MAAM,CAACG,MAAM,GAAG,UAAUZ,KAAK,EAAE;gBAC/BG,MAAM,CAACd,GAAG,GAAGW,KAAK,CAACE,MAAM,CAACC,MAAM;gBAChCA,MAAM,CAACyB,OAAO,GAAG3C,IAAI,CAAC2C,OAAO;gBAC7BjC,OAAO,CAACQ,MAAM,CAAC;cACjB,CAAC;cAEDM,MAAM,CAACgB,OAAO,GAAG,YAAY;gBAC3B,OAAOd,MAAM,CAACoB,MAAM,CAAC;cACvB,CAAC;cAEDtB,MAAM,CAACoB,aAAa,CAACK,MAAM,CAAC;YAC9B,CAAC;UACH,CAAC;UAEDF,KAAK,CAACP,OAAO,GAAG,YAAY;YAC1B,OAAOd,MAAM,CAACoB,MAAM,CAAC;UACvB,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IACDK,UAAU,EAAE,SAASA,UAAU,CAACnD,IAAI,EAAEK,OAAO,EAAE;MAC7C,IAAI+C,MAAM,GAAG,IAAI;MAEjB,OAAO,IAAI5D,kBAAkB,CAACH,OAAO,CAAC,UAAUqB,OAAO,EAAE;QACvD,IAAIC,OAAO,GAAGC,SAAS,CAACC,IAAI,CAACR,OAAO,CAACT,SAAS,EAAE,CAAC,CAAC;QAElDe,OAAO,CAACG,SAAS,GAAG,UAAUC,KAAK,EAAE;UACnC,IAAIC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACC,MAAM;UAC5BR,OAAO,CAACM,EAAE,CAAC;QACb,CAAC;MACH,CAAC,CAAC,CAACO,IAAI,CAAC,UAAUP,EAAE,EAAE;QACpB,OAAO,IAAIxB,kBAAkB,CAACH,OAAO,CAAC,UAAUqB,OAAO,EAAEgB,MAAM,EAAE;UAC/D,IAAIS,KAAK,GAAGnB,EAAE,CAACoB,WAAW,CAAC,CAAC/B,OAAO,CAACiB,cAAc,CAAC,EAAE,WAAW,CAAC;UACjE,IAAIyB,KAAK,GAAGZ,KAAK,CAACG,WAAW,CAACjC,OAAO,CAACiB,cAAc,CAAC,CAAC+B,MAAM,CAACrD,IAAI,CAAC+B,EAAE,CAAC;UAErEgB,KAAK,CAACjC,SAAS,GAAG,YAAY;YAC5BqB,KAAK,CAACO,UAAU,GAAG,YAAY;cAC7B,IAAIxB,MAAM,GAAG6B,KAAK,CAAC7B,MAAM;cACzBR,OAAO,CAACQ,MAAM,CAAC;YACjB,CAAC;UACH,CAAC;UAED6B,KAAK,CAACP,OAAO,GAAG,YAAY;YAC1B,OAAOd,MAAM,CAAC0B,MAAM,CAAC;UACvB,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC;AAEDxD,SAAS,CAACC,KAAK,GAAG,WAAW;AAC7B,IAAIyD,QAAQ,GAAG1D,SAAS;AACxBT,OAAO,CAACE,OAAO,GAAGiE,QAAQ"},"metadata":{},"sourceType":"script"}