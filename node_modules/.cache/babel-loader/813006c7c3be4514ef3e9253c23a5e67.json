{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es.array.concat.js\");\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\nvar _xhr = require(\"./xhr\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar googledrive = function googledrive(formio) {\n  return {\n    uploadFile: function uploadFile(file, fileName, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, abortCallback) {\n      return new _nativePromiseOnly.default(function (resolve, reject) {\n        // Send the file with data.\n        var xhr = new XMLHttpRequest();\n        if (typeof progressCallback === 'function') {\n          xhr.upload.onprogress = progressCallback;\n        }\n        if (typeof abortCallback === 'function') {\n          abortCallback(function () {\n            return xhr.abort();\n          });\n        }\n        var fd = new FormData();\n        fd.append('name', fileName);\n        fd.append('dir', dir);\n        fd.append('file', file); // Fire on network error.\n\n        xhr.onerror = function (err) {\n          err.networkError = true;\n          reject(err);\n        };\n        xhr.onload = function () {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            var response = JSON.parse(xhr.response);\n            response.storage = 'googledrive';\n            response.size = file.size;\n            response.type = file.type;\n            response.groupId = groupId;\n            response.groupPermissions = groupPermissions;\n            resolve(response);\n          } else {\n            reject(xhr.response || 'Unable to upload file');\n          }\n        };\n        xhr.onabort = reject;\n        xhr.open('POST', \"\".concat(formio.formUrl, \"/storage/gdrive\"));\n        (0, _xhr.setXhrHeaders)(formio, xhr);\n        var token = formio.getToken();\n        if (token) {\n          xhr.setRequestHeader('x-jwt-token', token);\n        }\n        xhr.send(fd);\n      });\n    },\n    downloadFile: function downloadFile(file) {\n      var token = formio.getToken();\n      file.url = \"\".concat(formio.formUrl, \"/storage/gdrive?fileId=\").concat(file.id, \"&fileName=\").concat(file.originalName).concat(token ? \"&x-jwt-token=\".concat(token) : '');\n      return _nativePromiseOnly.default.resolve(file);\n    }\n  };\n};\ngoogledrive.title = 'Google Drive';\nvar _default = googledrive;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","require","_nativePromiseOnly","_interopRequireDefault","_xhr","obj","__esModule","googledrive","formio","uploadFile","file","fileName","dir","progressCallback","url","options","fileKey","groupPermissions","groupId","abortCallback","resolve","reject","xhr","XMLHttpRequest","upload","onprogress","abort","fd","FormData","append","onerror","err","networkError","onload","status","response","JSON","parse","storage","size","type","onabort","open","concat","formUrl","setXhrHeaders","token","getToken","setRequestHeader","send","downloadFile","id","originalName","title","_default"],"sources":["D:/task/node_modules/formiojs/providers/storage/googleDrive.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nvar _xhr = require(\"./xhr\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar googledrive = function googledrive(formio) {\n  return {\n    uploadFile: function uploadFile(file, fileName, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, abortCallback) {\n      return new _nativePromiseOnly.default(function (resolve, reject) {\n        // Send the file with data.\n        var xhr = new XMLHttpRequest();\n\n        if (typeof progressCallback === 'function') {\n          xhr.upload.onprogress = progressCallback;\n        }\n\n        if (typeof abortCallback === 'function') {\n          abortCallback(function () {\n            return xhr.abort();\n          });\n        }\n\n        var fd = new FormData();\n        fd.append('name', fileName);\n        fd.append('dir', dir);\n        fd.append('file', file); // Fire on network error.\n\n        xhr.onerror = function (err) {\n          err.networkError = true;\n          reject(err);\n        };\n\n        xhr.onload = function () {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            var response = JSON.parse(xhr.response);\n            response.storage = 'googledrive';\n            response.size = file.size;\n            response.type = file.type;\n            response.groupId = groupId;\n            response.groupPermissions = groupPermissions;\n            resolve(response);\n          } else {\n            reject(xhr.response || 'Unable to upload file');\n          }\n        };\n\n        xhr.onabort = reject;\n        xhr.open('POST', \"\".concat(formio.formUrl, \"/storage/gdrive\"));\n        (0, _xhr.setXhrHeaders)(formio, xhr);\n        var token = formio.getToken();\n\n        if (token) {\n          xhr.setRequestHeader('x-jwt-token', token);\n        }\n\n        xhr.send(fd);\n      });\n    },\n    downloadFile: function downloadFile(file) {\n      var token = formio.getToken();\n      file.url = \"\".concat(formio.formUrl, \"/storage/gdrive?fileId=\").concat(file.id, \"&fileName=\").concat(file.originalName).concat(token ? \"&x-jwt-token=\".concat(token) : '');\n      return _nativePromiseOnly.default.resolve(file);\n    }\n  };\n};\n\ngoogledrive.title = 'Google Drive';\nvar _default = googledrive;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}